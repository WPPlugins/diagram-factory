/* dgf-tinymce-plugin v.0.9.8, 2017-07-06T12:47:10.532Z, Copyright (c) 2016-2017 Thomas MÃ¼ller Flury */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(require("tinymce"),require("dgf")):"function"==typeof define&&define.amd?define(["tinymce","dgf"],t):t(e.tinymce,e.dgf)}(this,function(e,t){"use strict";function a(e){return function(t,a){return Ln(e(t),a)}}function n(){for(var e,t=0,a=arguments.length,n={};t<a;++t){if(!(e=arguments[t]+"")||e in n)throw new Error("illegal type: "+e);n[e]=[]}return new r(n)}function r(e){this._=e}function o(e,t){return e.trim().split(/^|\s+/).map(function(e){var a="",n=e.indexOf(".");if(n>=0&&(a=e.slice(n+1),e=e.slice(0,n)),e&&!t.hasOwnProperty(e))throw new Error("unknown type: "+e);return{type:e,name:a}})}function i(e,t){for(var a,n=0,r=e.length;n<r;++n)if((a=e[n]).name===t)return a.value}function l(e,t,a){for(var n=0,r=e.length;n<r;++n)if(e[n].name===t){e[n]=Bn,e=e.slice(0,n).concat(e.slice(n+1));break}return null!=a&&e.push({name:t,value:a}),e}function u(e){return function(){var t=this.ownerDocument,a=this.namespaceURI;return a===Xn&&t.documentElement.namespaceURI===Xn?t.createElement(e):t.createElementNS(a,e)}}function c(e){return function(){return this.ownerDocument.createElementNS(e.space,e.local)}}function f(e,t,a){return e=s(e,t,a),function(t){var a=t.relatedTarget;a&&(a===this||8&a.compareDocumentPosition(this))||e.call(this,t)}}function s(e,t,a){return function(n){var r=Jn;Jn=n;try{e.call(this,this.__data__,t,a)}finally{Jn=r}}}function d(e){return e.trim().split(/^|\s+/).map(function(e){var t="",a=e.indexOf(".");return a>=0&&(t=e.slice(a+1),e=e.slice(0,a)),{type:e,name:t}})}function h(e){return function(){var t=this.__on;if(t){for(var a,n=0,r=-1,o=t.length;n<o;++n)a=t[n],e.type&&a.type!==e.type||a.name!==e.name?t[++r]=a:this.removeEventListener(a.type,a.listener,a.capture);++r?t.length=r:delete this.__on}}}function p(e,t,a){var n=Vn.hasOwnProperty(e.type)?f:s;return function(r,o,i){var l,u=this.__on,c=n(t,o,i);if(u)for(var f=0,s=u.length;f<s;++f)if((l=u[f]).type===e.type&&l.name===e.name)return this.removeEventListener(l.type,l.listener,l.capture),this.addEventListener(l.type,l.listener=c,l.capture=a),void(l.value=t);this.addEventListener(e.type,c,a),l={type:e.type,name:e.name,value:t,listener:c,capture:a},u?u.push(l):this.__on=[l]}}function m(){}function b(){return[]}function y(e,t){this.ownerDocument=e.ownerDocument,this.namespaceURI=e.namespaceURI,this._next=null,this._parent=e,this.__data__=t}function v(e,t,a,n,r,o){for(var i,l=0,u=t.length,c=o.length;l<c;++l)(i=t[l])?(i.__data__=o[l],n[l]=i):a[l]=new y(e,o[l]);for(;l<u;++l)(i=t[l])&&(r[l]=i)}function x(e,t,a,n,r,o,i){var l,u,c,f={},s=t.length,d=o.length,h=new Array(s);for(l=0;l<s;++l)(u=t[l])&&(h[l]=c=ir+i.call(u,u.__data__,l,t),c in f?r[l]=u:f[c]=u);for(l=0;l<d;++l)c=ir+i.call(e,o[l],l,o),(u=f[c])?(n[l]=u,u.__data__=o[l],f[c]=null):a[l]=new y(e,o[l]);for(l=0;l<s;++l)(u=t[l])&&f[h[l]]===u&&(r[l]=u)}function g(e,t){return e<t?-1:e>t?1:e>=t?0:NaN}function _(e){return function(){this.removeAttribute(e)}}function w(e){return function(){this.removeAttributeNS(e.space,e.local)}}function M(e,t){return function(){this.setAttribute(e,t)}}function S(e,t){return function(){this.setAttributeNS(e.space,e.local,t)}}function T(e,t){return function(){var a=t.apply(this,arguments);null==a?this.removeAttribute(e):this.setAttribute(e,a)}}function k(e,t){return function(){var a=t.apply(this,arguments);null==a?this.removeAttributeNS(e.space,e.local):this.setAttributeNS(e.space,e.local,a)}}function A(e){return function(){this.style.removeProperty(e)}}function C(e,t,a){return function(){this.style.setProperty(e,t,a)}}function Y(e,t,a){return function(){var n=t.apply(this,arguments);null==n?this.style.removeProperty(e):this.style.setProperty(e,n,a)}}function N(e){return function(){delete this[e]}}function F(e,t){return function(){this[e]=t}}function D(e,t){return function(){var a=t.apply(this,arguments);null==a?delete this[e]:this[e]=a}}function E(e){return e.trim().split(/^|\s+/)}function P(e){return e.classList||new H(e)}function H(e){this._node=e,this._names=E(e.getAttribute("class")||"")}function U(e,t){for(var a=P(e),n=-1,r=t.length;++n<r;)a.add(t[n])}function I(e,t){for(var a=P(e),n=-1,r=t.length;++n<r;)a.remove(t[n])}function L(e){return function(){U(this,e)}}function R(e){return function(){I(this,e)}}function B(e,t){return function(){(t.apply(this,arguments)?U:I)(this,e)}}function X(){this.textContent=""}function q(e){return function(){this.textContent=e}}function O(e){return function(){var t=e.apply(this,arguments);this.textContent=null==t?"":t}}function W(){this.innerHTML=""}function z(e){return function(){this.innerHTML=e}}function j(e){return function(){var t=e.apply(this,arguments);this.innerHTML=null==t?"":t}}function Z(){this.nextSibling&&this.parentNode.appendChild(this)}function $(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function V(){return null}function J(){var e=this.parentNode;e&&e.removeChild(this)}function G(e,t,a){var n=xr(e),r=n.CustomEvent;r?r=new r(t,a):(r=n.document.createEvent("Event"),a?(r.initEvent(t,a.bubbles,a.cancelable),r.detail=a.detail):r.initEvent(t,!1,!1)),e.dispatchEvent(r)}function K(e,t){return function(){return G(this,e,t)}}function Q(e,t){return function(){return G(this,e,t.apply(this,arguments))}}function ee(e,t){this._groups=e,this._parents=t}function te(){return new ee([[document.documentElement]],Dr)}function ae(e,t){var a=Object.create(e.prototype);for(var n in t)a[n]=t[n];return a}function ne(){}function re(e){var t;return e=(e+"").trim().toLowerCase(),(t=Lr.exec(e))?(t=parseInt(t[1],16),new ce(t>>8&15|t>>4&240,t>>4&15|240&t,(15&t)<<4|15&t,1)):(t=Rr.exec(e))?oe(parseInt(t[1],16)):(t=Br.exec(e))?new ce(t[1],t[2],t[3],1):(t=Xr.exec(e))?new ce(255*t[1]/100,255*t[2]/100,255*t[3]/100,1):(t=qr.exec(e))?ie(t[1],t[2],t[3],t[4]):(t=Or.exec(e))?ie(255*t[1]/100,255*t[2]/100,255*t[3]/100,t[4]):(t=Wr.exec(e))?fe(t[1],t[2]/100,t[3]/100,1):(t=zr.exec(e))?fe(t[1],t[2]/100,t[3]/100,t[4]):jr.hasOwnProperty(e)?oe(jr[e]):"transparent"===e?new ce(NaN,NaN,NaN,0):null}function oe(e){return new ce(e>>16&255,e>>8&255,255&e,1)}function ie(e,t,a,n){return n<=0&&(e=t=a=NaN),new ce(e,t,a,n)}function le(e){return e instanceof ne||(e=re(e)),e?(e=e.rgb(),new ce(e.r,e.g,e.b,e.opacity)):new ce}function ue(e,t,a,n){return 1===arguments.length?le(e):new ce(e,t,a,null==n?1:n)}function ce(e,t,a,n){this.r=+e,this.g=+t,this.b=+a,this.opacity=+n}function fe(e,t,a,n){return n<=0?e=t=a=NaN:a<=0||a>=1?e=t=NaN:t<=0&&(e=NaN),new he(e,t,a,n)}function se(e){if(e instanceof he)return new he(e.h,e.s,e.l,e.opacity);if(e instanceof ne||(e=re(e)),!e)return new he;if(e instanceof he)return e;e=e.rgb();var t=e.r/255,a=e.g/255,n=e.b/255,r=Math.min(t,a,n),o=Math.max(t,a,n),i=NaN,l=o-r,u=(o+r)/2;return l?(i=t===o?(a-n)/l+6*(a<n):a===o?(n-t)/l+2:(t-a)/l+4,l/=u<.5?o+r:2-o-r,i*=60):l=u>0&&u<1?0:i,new he(i,l,u,e.opacity)}function de(e,t,a,n){return 1===arguments.length?se(e):new he(e,t,a,null==n?1:n)}function he(e,t,a,n){this.h=+e,this.s=+t,this.l=+a,this.opacity=+n}function pe(e,t,a){return 255*(e<60?t+(a-t)*e/60:e<180?a:e<240?t+(a-t)*(240-e)/60:t)}function me(e){if(e instanceof ye)return new ye(e.l,e.a,e.b,e.opacity);if(e instanceof Se){var t=e.h*Zr;return new ye(e.l,Math.cos(t)*e.c,Math.sin(t)*e.c,e.opacity)}e instanceof ce||(e=le(e));var a=_e(e.r),n=_e(e.g),r=_e(e.b),o=ve((.4124564*a+.3575761*n+.1804375*r)/Vr),i=ve((.2126729*a+.7151522*n+.072175*r)/Jr);return new ye(116*i-16,500*(o-i),200*(i-ve((.0193339*a+.119192*n+.9503041*r)/Gr)),e.opacity)}function be(e,t,a,n){return 1===arguments.length?me(e):new ye(e,t,a,null==n?1:n)}function ye(e,t,a,n){this.l=+e,this.a=+t,this.b=+a,this.opacity=+n}function ve(e){return e>to?Math.pow(e,1/3):e/eo+Kr}function xe(e){return e>Qr?e*e*e:eo*(e-Kr)}function ge(e){return 255*(e<=.0031308?12.92*e:1.055*Math.pow(e,1/2.4)-.055)}function _e(e){return(e/=255)<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4)}function we(e){if(e instanceof Se)return new Se(e.h,e.c,e.l,e.opacity);e instanceof ye||(e=me(e));var t=Math.atan2(e.b,e.a)*$r;return new Se(t<0?t+360:t,Math.sqrt(e.a*e.a+e.b*e.b),e.l,e.opacity)}function Me(e,t,a,n){return 1===arguments.length?we(e):new Se(e,t,a,null==n?1:n)}function Se(e,t,a,n){this.h=+e,this.c=+t,this.l=+a,this.opacity=+n}function Te(e){if(e instanceof Ae)return new Ae(e.h,e.s,e.l,e.opacity);e instanceof ce||(e=le(e));var t=e.r/255,a=e.g/255,n=e.b/255,r=(co*n+lo*t-uo*a)/(co+lo-uo),o=n-r,i=(io*(a-r)-ro*o)/oo,l=Math.sqrt(i*i+o*o)/(io*r*(1-r)),u=l?Math.atan2(i,o)*$r-120:NaN;return new Ae(u<0?u+360:u,l,r,e.opacity)}function ke(e,t,a,n){return 1===arguments.length?Te(e):new Ae(e,t,a,null==n?1:n)}function Ae(e,t,a,n){this.h=+e,this.s=+t,this.l=+a,this.opacity=+n}function Ce(e,t,a,n,r){var o=e*e,i=o*e;return((1-3*e+3*o-i)*t+(4-6*o+3*i)*a+(1+3*e+3*o-3*i)*n+i*r)/6}function Ye(e,t){return function(a){return e+a*t}}function Ne(e,t,a){return e=Math.pow(e,a),t=Math.pow(t,a)-e,a=1/a,function(n){return Math.pow(e+n*t,a)}}function Fe(e,t){var a=t-e;return a?Ye(e,a>180||a<-180?a-360*Math.round(a/360):a):bo(isNaN(e)?t:e)}function De(e){return 1==(e=+e)?Ee:function(t,a){return a-t?Ne(t,a,e):bo(isNaN(t)?a:t)}}function Ee(e,t){var a=t-e;return a?Ye(e,a):bo(isNaN(e)?t:e)}function Pe(e){return function(){return e}}function He(e){return function(t){return e(t)+""}}function Ue(e){return"none"===e?Yo:(fo||(fo=document.createElement("DIV"),so=document.documentElement,ho=document.defaultView),fo.style.transform=e,e=ho.getComputedStyle(so.appendChild(fo),null).getPropertyValue("transform"),so.removeChild(fo),e=e.slice(7,-1).split(","),No(+e[0],+e[1],+e[2],+e[3],+e[4],+e[5]))}function Ie(e){return null==e?Yo:(po||(po=document.createElementNS("http://www.w3.org/2000/svg","g")),po.setAttribute("transform",e),(e=po.transform.baseVal.consolidate())?(e=e.matrix,No(e.a,e.b,e.c,e.d,e.e,e.f)):Yo)}function Le(e,t,a,n){function r(e){return e.length?e.pop()+" ":""}function o(e,n,r,o,i,l){if(e!==r||n!==o){var u=i.push("translate(",null,t,null,a);l.push({i:u-4,x:_o(e,r)},{i:u-2,x:_o(n,o)})}else(r||o)&&i.push("translate("+r+t+o+a)}function i(e,t,a,o){e!==t?(e-t>180?t+=360:t-e>180&&(e+=360),o.push({i:a.push(r(a)+"rotate(",null,n)-2,x:_o(e,t)})):t&&a.push(r(a)+"rotate("+t+n)}function l(e,t,a,o){e!==t?o.push({i:a.push(r(a)+"skewX(",null,n)-2,x:_o(e,t)}):t&&a.push(r(a)+"skewX("+t+n)}function u(e,t,a,n,o,i){if(e!==a||t!==n){var l=o.push(r(o)+"scale(",null,",",null,")");i.push({i:l-4,x:_o(e,a)},{i:l-2,x:_o(t,n)})}else 1===a&&1===n||o.push(r(o)+"scale("+a+","+n+")")}return function(t,a){var n=[],r=[];return t=e(t),a=e(a),o(t.translateX,t.translateY,a.translateX,a.translateY,n,r),i(t.rotate,a.rotate,n,r),l(t.skewX,a.skewX,n,r),u(t.scaleX,t.scaleY,a.scaleX,a.scaleY,n,r),t=a=null,function(e){for(var t,a=-1,o=r.length;++a<o;)n[(t=r[a]).i]=t.x(e);return n.join("")}}}function Re(e){return function t(a){function n(t,n){var r=e((t=ke(t)).h,(n=ke(n)).h),o=Ee(t.s,n.s),i=Ee(t.l,n.l),l=Ee(t.opacity,n.opacity);return function(e){return t.h=r(e),t.s=o(e),t.l=i(Math.pow(e,a)),t.opacity=l(e),t+""}}return a=+a,n.gamma=t,n}(1)}function Be(){return Xo||(Wo(Xe),Xo=Oo.now()+qo)}function Xe(){Xo=0}function qe(){this._call=this._time=this._next=null}function Oe(e,t,a){var n=new qe;return n.restart(e,t,a),n}function We(){Be(),++Uo;for(var e,t=Eo;t;)(e=Xo-t._time)>=0&&t._call.call(null,e),t=t._next;--Uo}function ze(){Xo=(Bo=Oo.now())+qo,Uo=Io=0;try{We()}finally{Uo=0,Ze(),Xo=0}}function je(){var e=Oo.now(),t=e-Bo;t>Ro&&(qo-=t,Bo=e)}function Ze(){for(var e,t,a=Eo,n=1/0;a;)a._call?(n>a._time&&(n=a._time),e=a,a=a._next):(t=a._next,a._next=null,a=e?e._next=t:Eo=t);Po=e,$e(n)}function $e(e){if(!Uo){Io&&(Io=clearTimeout(Io));var t=e-Xo;t>24?(e<1/0&&(Io=setTimeout(ze,t)),Lo&&(Lo=clearInterval(Lo))):(Lo||(Bo=Xo,Lo=setInterval(je,Ro)),Uo=1,Wo(ze))}}function Ve(e,t){var a=e.__transition;if(!a||!(a=a[t])||a.state>$o)throw new Error("too late");return a}function Je(e,t){var a=e.__transition;if(!a||!(a=a[t])||a.state>Jo)throw new Error("too late");return a}function Ge(e,t){var a=e.__transition;if(!a||!(a=a[t]))throw new Error("too late");return a}function Ke(e,t,a){function n(e){a.state=Vo,a.timer.restart(r,a.delay,a.time),a.delay<=e&&r(e-a.delay)}function r(n){var c,f,s,d;if(a.state!==Vo)return i();for(c in u)if(d=u[c],d.name===a.name){if(d.state===Go)return zo(r);d.state===Ko?(d.state=ei,d.timer.stop(),d.on.call("interrupt",e,e.__data__,d.index,d.group),delete u[c]):+c<t&&(d.state=ei,d.timer.stop(),delete u[c])}if(zo(function(){a.state===Go&&(a.state=Ko,a.timer.restart(o,a.delay,a.time),o(n))}),a.state=Jo,a.on.call("start",e,e.__data__,a.index,a.group),a.state===Jo){for(a.state=Go,l=new Array(s=a.tween.length),c=0,f=-1;c<s;++c)(d=a.tween[c].value.call(e,e.__data__,a.index,a.group))&&(l[++f]=d);l.length=f+1}}function o(t){for(var n=t<a.duration?a.ease.call(null,t/a.duration):(a.timer.restart(i),a.state=Qo,1),r=-1,o=l.length;++r<o;)l[r].call(null,n);a.state===Qo&&(a.on.call("end",e,e.__data__,a.index,a.group),i())}function i(){a.state=ei,a.timer.stop(),delete u[t];for(var n in u)return;delete e.__transition}var l,u=e.__transition;u[t]=a,a.timer=Oe(n,0,a.time)}function Qe(e,t){var a,n;return function(){var r=Je(this,e),o=r.tween;if(o!==a){n=a=o;for(var i=0,l=n.length;i<l;++i)if(n[i].name===t){n=n.slice(),n.splice(i,1);break}}r.tween=n}}function et(e,t,a){var n,r;if("function"!=typeof a)throw new Error;return function(){var o=Je(this,e),i=o.tween;if(i!==n){r=(n=i).slice();for(var l={name:t,value:a},u=0,c=r.length;u<c;++u)if(r[u].name===t){r[u]=l;break}u===c&&r.push(l)}o.tween=r}}function tt(e,t,a){var n=e._id;return e.each(function(){var e=Je(this,n);(e.value||(e.value={}))[t]=a.apply(this,arguments)}),function(e){return Ge(e,n).value[t]}}function at(e){return function(){this.removeAttribute(e)}}function nt(e){return function(){this.removeAttributeNS(e.space,e.local)}}function rt(e,t,a){var n,r;return function(){var o=this.getAttribute(e);return o===a?null:o===n?r:r=t(n=o,a)}}function ot(e,t,a){var n,r;return function(){var o=this.getAttributeNS(e.space,e.local);return o===a?null:o===n?r:r=t(n=o,a)}}function it(e,t,a){var n,r,o;return function(){var i,l=a(this);return null==l?void this.removeAttribute(e):(i=this.getAttribute(e),i===l?null:i===n&&l===r?o:o=t(n=i,r=l))}}function lt(e,t,a){var n,r,o;return function(){var i,l=a(this);return null==l?void this.removeAttributeNS(e.space,e.local):(i=this.getAttributeNS(e.space,e.local),i===l?null:i===n&&l===r?o:o=t(n=i,r=l))}}function ut(e,t){function a(){var a=this,n=t.apply(a,arguments);return n&&function(t){a.setAttributeNS(e.space,e.local,n(t))}}return a._value=t,a}function ct(e,t){function a(){var a=this,n=t.apply(a,arguments);return n&&function(t){a.setAttribute(e,n(t))}}return a._value=t,a}function ft(e,t){return function(){Ve(this,e).delay=+t.apply(this,arguments)}}function st(e,t){return t=+t,function(){Ve(this,e).delay=t}}function dt(e,t){return function(){Je(this,e).duration=+t.apply(this,arguments)}}function ht(e,t){return t=+t,function(){Je(this,e).duration=t}}function pt(e,t){if("function"!=typeof t)throw new Error;return function(){Je(this,e).ease=t}}function mt(e){return(e+"").trim().split(/^|\s+/).every(function(e){var t=e.indexOf(".");return t>=0&&(e=e.slice(0,t)),!e||"start"===e})}function bt(e,t,a){var n,r,o=mt(t)?Ve:Je;return function(){var i=o(this,e),l=i.on;l!==n&&(r=(n=l).copy()).on(t,a),i.on=r}}function yt(e){return function(){var t=this.parentNode;for(var a in this.__transition)if(+a!==e)return;t&&t.removeChild(this)}}function vt(e,t){var a,n,r;return function(){var o=xr(this).getComputedStyle(this,null),i=o.getPropertyValue(e),l=(this.style.removeProperty(e),o.getPropertyValue(e));return i===l?null:i===a&&l===n?r:r=t(a=i,n=l)}}function xt(e){return function(){this.style.removeProperty(e)}}function gt(e,t,a){var n,r;return function(){var o=xr(this).getComputedStyle(this,null).getPropertyValue(e);return o===a?null:o===n?r:r=t(n=o,a)}}function _t(e,t,a){var n,r,o;return function(){var i=xr(this).getComputedStyle(this,null),l=i.getPropertyValue(e),u=a(this);return null==u&&(this.style.removeProperty(e),u=i.getPropertyValue(e)),l===u?null:l===n&&u===r?o:o=t(n=l,r=u)}}function wt(e,t,a){function n(){var n=this,r=t.apply(n,arguments);return r&&function(t){n.style.setProperty(e,r(t),a)}}return n._value=t,n}function Mt(e){return function(){this.textContent=e}}function St(e){return function(){var t=e(this);this.textContent=null==t?"":t}}function Tt(e,t,a,n){this._groups=e,this._parents=t,this._name=a,this._id=n}function kt(e){return te().transition(e)}function At(){return++Mi}function Ct(e){return((e*=2)<=1?e*e*e:(e-=2)*e*e+2)/2}function Yt(e,t){for(var a;!(a=e.__transition)||!(a=a[t]);)if(!(e=e.parentNode))return ki.time=Be(),ki;return a}function Nt(e){return{type:e}}function Ft(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function Dt(){return new Ft}function Et(){}function Pt(e,t){var a=new Et;if(e instanceof Et)e.each(function(e,t){a.set(t,e)});else if(Array.isArray(e)){var n,r=-1,o=e.length;if(null==t)for(;++r<o;)a.set(r,e[r]);else for(;++r<o;)a.set(t(n=e[r],r,e),n)}else if(e)for(var i in e)a.set(i,e[i]);return a}function Ht(){}function Ut(e,t){var a=new Ht;if(e instanceof Ht)e.each(function(e){a.add(e)});else if(e){var n=-1,r=e.length;if(null==t)for(;++n<r;)a.add(e[n]);else for(;++n<r;)a.add(t(e[n],n,e))}return a}function It(e){return new Function("d","return {"+e.map(function(e,t){return JSON.stringify(e)+": d["+t+"]"}).join(",")+"}")}function Lt(e,t){var a=It(e);return function(n,r){return t(a(n),r,e)}}function Rt(e){var t=Object.create(null),a=[];return e.forEach(function(e){for(var n in e)n in t||a.push(t[n]=n)}),a}function Bt(e,t,a,n){if(isNaN(t)||isNaN(a))return e;var r,o,i,l,u,c,f,s,d,h=e._root,p={data:n},m=e._x0,b=e._y0,y=e._x1,v=e._y1;if(!h)return e._root=p,e;for(;h.length;)if((c=t>=(o=(m+y)/2))?m=o:y=o,(f=a>=(i=(b+v)/2))?b=i:v=i,r=h,!(h=h[s=f<<1|c]))return r[s]=p,e;if(l=+e._x.call(null,h.data),u=+e._y.call(null,h.data),t===l&&a===u)return p.next=h,r?r[s]=p:e._root=p,e;do{r=r?r[s]=new Array(4):e._root=new Array(4),(c=t>=(o=(m+y)/2))?m=o:y=o,(f=a>=(i=(b+v)/2))?b=i:v=i}while((s=f<<1|c)==(d=(u>=i)<<1|l>=o));return r[d]=h,r[s]=p,e}function Xt(e){var t,a,n,r,o=e.length,i=new Array(o),l=new Array(o),u=1/0,c=1/0,f=-1/0,s=-1/0;for(a=0;a<o;++a)isNaN(n=+this._x.call(null,t=e[a]))||isNaN(r=+this._y.call(null,t))||(i[a]=n,l[a]=r,n<u&&(u=n),n>f&&(f=n),r<c&&(c=r),r>s&&(s=r));for(f<u&&(u=this._x0,f=this._x1),s<c&&(c=this._y0,s=this._y1),this.cover(u,c).cover(f,s),a=0;a<o;++a)Bt(this,i[a],l[a],e[a]);return this}function qt(e){for(var t=0,a=e.length;t<a;++t)this.remove(e[t]);return this}function Ot(e){return e[0]}function Wt(e){return e[1]}function zt(e,t,a){var n=new jt(null==t?Ot:t,null==a?Wt:a,NaN,NaN,NaN,NaN);return null==e?n:n.addAll(e)}function jt(e,t,a,n,r,o){this._x=e,this._y=t,this._x0=a,this._y0=n,this._x1=r,this._y1=o,this._root=void 0}function Zt(e){for(var t={data:e.data},a=t;e=e.next;)a=a.next={data:e.data};return t}function $t(e){return new Vt(e)}function Vt(e){if(!(t=ll.exec(e)))throw new Error("invalid format: "+e);var t,a=t[1]||" ",n=t[2]||">",r=t[3]||"-",o=t[4]||"",i=!!t[5],l=t[6]&&+t[6],u=!!t[7],c=t[8]&&+t[8].slice(1),f=t[9]||"";"n"===f?(u=!0,f="g"):il[f]||(f=""),(i||"0"===a&&"="===n)&&(i=!0,a="0",n="="),this.fill=a,this.align=n,this.sign=r,this.symbol=o,this.zero=i,this.width=l,this.comma=u,this.precision=c,this.type=f}function Jt(){this.reset()}function Gt(e,t,a){var n=e.s=t+a,r=n-t,o=n-r;e.t=t-o+(a-r)}function Kt(e){return e>1?0:e<-1?bl:Math.acos(e)}function Qt(e){return e>1?yl:e<-1?-yl:Math.asin(e)}function ea(e){return function(t,a){var n=gl(t),r=gl(a),o=e(n*r);return[o*r*_l(t),o*_l(a)]}}function ta(e){return function(t,a){var n=wl(t*t+a*a),r=e(n),o=_l(r),i=gl(r);return[xl(t*o,n*i),Qt(n&&a*o/n)]}}function aa(e){var t=0,a=e.children,n=a&&a.length;if(n)for(;--n>=0;)t+=a[n].value;else t=1;e.value=t}function na(e,t){if(e===t)return e;var a=e.ancestors(),n=t.ancestors(),r=null;for(e=a.pop(),t=n.pop();e===t;)r=e,e=a.pop(),t=n.pop();return r}function ra(e,t){var a,n,r,o,i,l=new ca(e),u=+e.value&&(l.value=e.value),c=[l];for(null==t&&(t=ia);a=c.pop();)if(u&&(a.value=+a.data.value),(r=t(a.data))&&(i=r.length))for(a.children=new Array(i),o=i-1;o>=0;--o)c.push(n=a.children[o]=new ca(r[o])),n.parent=a,n.depth=a.depth+1;return l.eachBefore(ua)}function oa(){return ra(this).eachBefore(la)}function ia(e){return e.children}function la(e){e.data=e.data.data}function ua(e){var t=0;do{e.height=t}while((e=e.parent)&&e.height<++t)}function ca(e){this.data=e,this.depth=this.height=0,this.parent=null}function fa(e,t){this._=e,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=t}function sa(e){if(!e._start)try{da(e)}catch(t){if(e._tasks[e._ended+e._active-1])pa(e,t);else if(!e._data)throw t}}function da(e){for(;e._start=e._waiting&&e._active<e._size;){var t=e._ended+e._active,a=e._tasks[t],n=a.length-1,r=a[n];a[n]=ha(e,t),--e._waiting,++e._active,a=r.apply(null,a),e._tasks[t]&&(e._tasks[t]=a||Pl)}}function ha(e,t){return function(a,n){e._tasks[t]&&(--e._active,++e._ended,e._tasks[t]=null,null==e._error&&(null!=a?pa(e,a):(e._data[t]=n,e._waiting?sa(e):ma(e))))}}function pa(e,t){var a,n=e._tasks.length;for(e._error=t,e._data=void 0,e._waiting=NaN;--n>=0;)if((a=e._tasks[n])&&(e._tasks[n]=null,a.abort))try{a.abort()}catch(t){}e._active=NaN,ma(e)}function ma(e){if(!e._active&&e._call){var t=e._data;e._data=void 0,e._call(e._error,t)}}function ba(e){return function(t,a){e(null==t?a:null)}}function ya(e){var t=e.responseType;return t&&"text"!==t?e.response:e.responseText}function va(e,t){return function(a){return e(a.responseText,t)}}function xa(e,t,a,n){function r(t){return e(t=new Date(+t)),t}return r.floor=r,r.ceil=function(a){return e(a=new Date(a-1)),t(a,1),e(a),a},r.round=function(e){var t=r(e),a=r.ceil(e);return e-t<a-e?t:a},r.offset=function(e,a){return t(e=new Date(+e),null==a?1:Math.floor(a)),e},r.range=function(a,n,o){var i=[];if(a=r.ceil(a),o=null==o?1:Math.floor(o),!(a<n&&o>0))return i;do{i.push(new Date(+a))}while(t(a,o),e(a),a<n);return i},r.filter=function(a){return xa(function(t){if(t>=t)for(;e(t),!a(t);)t.setTime(t-1)},function(e,n){if(e>=e)for(;--n>=0;)for(;t(e,1),!a(e););})},a&&(r.count=function(t,n){return Rl.setTime(+t),Bl.setTime(+n),e(Rl),e(Bl),Math.floor(a(Rl,Bl))},r.every=function(e){return e=Math.floor(e),isFinite(e)&&e>0?e>1?r.filter(n?function(t){return n(t)%e==0}:function(t){return r.count(0,t)%e==0}):r:null}),r}function ga(e){return xa(function(t){t.setDate(t.getDate()-(t.getDay()+7-e)%7),t.setHours(0,0,0,0)},function(e,t){e.setDate(e.getDate()+7*t)},function(e,t){return(t-e-(t.getTimezoneOffset()-e.getTimezoneOffset())*ql)/Ol})}function _a(e){return xa(function(t){t.setUTCDate(t.getUTCDate()-(t.getUTCDay()+7-e)%7),t.setUTCHours(0,0,0,0)},function(e,t){e.setUTCDate(e.getUTCDate()+7*t)},function(e,t){return(t-e)/Ol})}function wa(e){if(0<=e.y&&e.y<100){var t=new Date(-1,e.m,e.d,e.H,e.M,e.S,e.L);return t.setFullYear(e.y),t}return new Date(e.y,e.m,e.d,e.H,e.M,e.S,e.L)}function Ma(e){if(0<=e.y&&e.y<100){var t=new Date(Date.UTC(-1,e.m,e.d,e.H,e.M,e.S,e.L));return t.setUTCFullYear(e.y),t}return new Date(Date.UTC(e.y,e.m,e.d,e.H,e.M,e.S,e.L))}function Sa(e){return{y:e,m:0,d:1,H:0,M:0,S:0,L:0}}function Ta(e){function t(e,t){return function(a){var n,r,o,i=[],l=-1,u=0,c=e.length;for(a instanceof Date||(a=new Date(+a));++l<c;)37===e.charCodeAt(l)&&(i.push(e.slice(u,l)),null!=(r=nu[n=e.charAt(++l)])?n=e.charAt(++l):r="e"===n?" ":"0",(o=t[n])&&(n=o(a,r)),i.push(n),u=l+1);return i.push(e.slice(u,l)),i.join("")}}function a(e,t){return function(a){var r=Sa(1900);if(n(r,e,a+="",0)!=a.length)return null;if("p"in r&&(r.H=r.H%12+12*r.p),"W"in r||"U"in r){"w"in r||(r.w="W"in r?1:0);var o="Z"in r?Ma(Sa(r.y)).getUTCDay():t(Sa(r.y)).getDay();r.m=0,r.d="W"in r?(r.w+6)%7+7*r.W-(o+5)%7:r.w+7*r.U-(o+6)%7}return"Z"in r?(r.H+=r.Z/100|0,r.M+=r.Z%100,Ma(r)):t(r)}}function n(e,t,a,n){for(var r,o,i=0,l=t.length,u=a.length;i<l;){if(n>=u)return-1;if(37===(r=t.charCodeAt(i++))){if(r=t.charAt(i++),!(o=q[r in nu?t.charAt(i++):r])||(n=o(e,a,n))<0)return-1}else if(r!=a.charCodeAt(n++))return-1}return n}function r(e,t,a){var n=N.exec(t.slice(a));return n?(e.p=F[n[0].toLowerCase()],a+n[0].length):-1}function o(e,t,a){var n=P.exec(t.slice(a));return n?(e.w=H[n[0].toLowerCase()],a+n[0].length):-1}function i(e,t,a){var n=D.exec(t.slice(a));return n?(e.w=E[n[0].toLowerCase()],a+n[0].length):-1}function l(e,t,a){var n=L.exec(t.slice(a));return n?(e.m=R[n[0].toLowerCase()],a+n[0].length):-1}function u(e,t,a){var n=U.exec(t.slice(a));return n?(e.m=I[n[0].toLowerCase()],a+n[0].length):-1}function c(e,t,a){return n(e,w,t,a)}function f(e,t,a){return n(e,M,t,a)}function s(e,t,a){return n(e,S,t,a)}function d(e){return A[e.getDay()]}function h(e){return k[e.getDay()]}function p(e){return Y[e.getMonth()]}function m(e){return C[e.getMonth()]}function b(e){return T[+(e.getHours()>=12)]}function y(e){return A[e.getUTCDay()]}function v(e){return k[e.getUTCDay()]}function x(e){return Y[e.getUTCMonth()]}function g(e){return C[e.getUTCMonth()]}function _(e){return T[+(e.getUTCHours()>=12)]}var w=e.dateTime,M=e.date,S=e.time,T=e.periods,k=e.days,A=e.shortDays,C=e.months,Y=e.shortMonths,N=Ca(T),F=Ya(T),D=Ca(k),E=Ya(k),P=Ca(A),H=Ya(A),U=Ca(C),I=Ya(C),L=Ca(Y),R=Ya(Y),B={a:d,A:h,b:p,B:m,c:null,d:Wa,e:Wa,H:za,I:ja,j:Za,L:$a,m:Va,M:Ja,p:b,S:Ga,U:Ka,w:Qa,W:en,x:null,X:null,y:tn,Y:an,Z:nn,"%":xn},X={a:y,A:v,b:x,B:g,c:null,d:rn,e:rn,H:on,I:ln,j:un,L:cn,m:fn,M:sn,p:_,S:dn,U:hn,w:pn,W:mn,x:null,X:null,y:bn,Y:yn,Z:vn,"%":xn},q={a:o,A:i,b:l,B:u,c:c,d:Ia,e:Ia,H:Ra,I:Ra,j:La,L:qa,m:Ua,M:Ba,p:r,S:Xa,U:Fa,w:Na,W:Da,x:f,X:s,y:Pa,Y:Ea,Z:Ha,"%":Oa};return B.x=t(M,B),B.X=t(S,B),B.c=t(w,B),X.x=t(M,X),X.X=t(S,X),X.c=t(w,X),{format:function(e){var a=t(e+="",B);return a.toString=function(){return e},a},parse:function(e){var t=a(e+="",wa);return t.toString=function(){return e},t},utcFormat:function(e){var a=t(e+="",X);return a.toString=function(){return e},a},utcParse:function(e){var t=a(e,Ma);return t.toString=function(){return e},t}}}function ka(e,t,a){var n=e<0?"-":"",r=(n?-e:e)+"",o=r.length;return n+(o<a?new Array(a-o+1).join(t)+r:r)}function Aa(e){return e.replace(iu,"\\$&")}function Ca(e){return new RegExp("^(?:"+e.map(Aa).join("|")+")","i")}function Ya(e){for(var t={},a=-1,n=e.length;++a<n;)t[e[a].toLowerCase()]=a;return t}function Na(e,t,a){var n=ru.exec(t.slice(a,a+1));return n?(e.w=+n[0],a+n[0].length):-1}function Fa(e,t,a){var n=ru.exec(t.slice(a));return n?(e.U=+n[0],a+n[0].length):-1}function Da(e,t,a){var n=ru.exec(t.slice(a));return n?(e.W=+n[0],a+n[0].length):-1}function Ea(e,t,a){var n=ru.exec(t.slice(a,a+4));return n?(e.y=+n[0],a+n[0].length):-1}function Pa(e,t,a){var n=ru.exec(t.slice(a,a+2));return n?(e.y=+n[0]+(+n[0]>68?1900:2e3),a+n[0].length):-1}function Ha(e,t,a){var n=/^(Z)|([+-]\d\d)(?:\:?(\d\d))?/.exec(t.slice(a,a+6));return n?(e.Z=n[1]?0:-(n[2]+(n[3]||"00")),a+n[0].length):-1}function Ua(e,t,a){var n=ru.exec(t.slice(a,a+2));return n?(e.m=n[0]-1,a+n[0].length):-1}function Ia(e,t,a){var n=ru.exec(t.slice(a,a+2));return n?(e.d=+n[0],a+n[0].length):-1}function La(e,t,a){var n=ru.exec(t.slice(a,a+3));return n?(e.m=0,e.d=+n[0],a+n[0].length):-1}function Ra(e,t,a){var n=ru.exec(t.slice(a,a+2));return n?(e.H=+n[0],a+n[0].length):-1}function Ba(e,t,a){var n=ru.exec(t.slice(a,a+2));return n?(e.M=+n[0],a+n[0].length):-1}function Xa(e,t,a){var n=ru.exec(t.slice(a,a+2));return n?(e.S=+n[0],a+n[0].length):-1}function qa(e,t,a){var n=ru.exec(t.slice(a,a+3));return n?(e.L=+n[0],a+n[0].length):-1}function Oa(e,t,a){var n=ou.exec(t.slice(a,a+1));return n?a+n[0].length:-1}function Wa(e,t){return ka(e.getDate(),t,2)}function za(e,t){return ka(e.getHours(),t,2)}function ja(e,t){return ka(e.getHours()%12||12,t,2)}function Za(e,t){return ka(1+Wl.count(Zl(e),e),t,3)}function $a(e,t){return ka(e.getMilliseconds(),t,3)}function Va(e,t){return ka(e.getMonth()+1,t,2)}function Ja(e,t){return ka(e.getMinutes(),t,2)}function Ga(e,t){return ka(e.getSeconds(),t,2)}function Ka(e,t){return ka(zl.count(Zl(e),e),t,2)}function Qa(e){return e.getDay()}function en(e,t){return ka(jl.count(Zl(e),e),t,2)}function tn(e,t){return ka(e.getFullYear()%100,t,2)}function an(e,t){return ka(e.getFullYear()%1e4,t,4)}function nn(e){var t=e.getTimezoneOffset();return(t>0?"-":(t*=-1,"+"))+ka(t/60|0,"0",2)+ka(t%60,"0",2)}function rn(e,t){return ka(e.getUTCDate(),t,2)}function on(e,t){return ka(e.getUTCHours(),t,2)}function ln(e,t){return ka(e.getUTCHours()%12||12,t,2)}function un(e,t){return ka(1+$l.count(Gl(e),e),t,3)}function cn(e,t){return ka(e.getUTCMilliseconds(),t,3)}function fn(e,t){return ka(e.getUTCMonth()+1,t,2)}function sn(e,t){return ka(e.getUTCMinutes(),t,2)}function dn(e,t){return ka(e.getUTCSeconds(),t,2)}function hn(e,t){return ka(Vl.count(Gl(e),e),t,2)}function pn(e){return e.getUTCDay()}function mn(e,t){return ka(Jl.count(Gl(e),e),t,2)}function bn(e,t){return ka(e.getUTCFullYear()%100,t,2)}function yn(e,t){return ka(e.getUTCFullYear()%1e4,t,4)}function vn(){return"+0000"}function xn(){return"%"}function gn(e){return e.toISOString()}function _n(e){var t=new Date(e);return isNaN(t)?null:t}function wn(e){this._context=e}function Mn(e){return e<0?-1:1}function Sn(e,t,a){var n=e._x1-e._x0,r=t-e._x1,o=(e._y1-e._y0)/(n||r<0&&-0),i=(a-e._y1)/(r||n<0&&-0),l=(o*r+i*n)/(n+r);return(Mn(o)+Mn(i))*Math.min(Math.abs(o),Math.abs(i),.5*Math.abs(l))||0}function Tn(e,t){var a=e._x1-e._x0;return a?(3*(e._y1-e._y0)/a-t)/2:t}function kn(e,t,a){var n=e._x0,r=e._y0,o=e._x1,i=e._y1,l=(o-n)/3;e._context.bezierCurveTo(n+l,r+l*t,o-l,i-l*a,o,i)}function An(e){this._context=e}function Cn(e){this._context=new Yn(e)}function Yn(e){this._context=e}function Nn(e,t){function a(e,r){if(Object(e)!==e)n[r]=e;else if(Array.isArray(e)){for(var o=0,i=e.length;o<i;o++)a(e[o],r+"["+o+"]");0===i&&(n[r]=[])}else{var l=!0;for(var u in e)l=!1,a(e[u],r?r+t+u:u);l&&r&&(n[r]={})}}t=t||"_";var n={};return a(e,""),n}function Fn(e,t){if(t=t||"_",Object(e)!==e||Array.isArray(e))return e;var a=new RegExp("\\.?([^"+t+"\\[\\]]+)|\\[(\\d+)\\]","g"),n={};for(var r in e){for(var o=n,i="",l=a.exec(r);l;)o=o[i]||(o[i]=l[2]?[]:{}),i=l[2]||l[1],l=a.exec(r);o[i]=e[r]}return n[""]||n}function Dn(e){return"object"===(void 0===e?"undefined":wo(e))&&(null===e||0===Object.keys(e).length)}function En(e){for(var t=e+"=",a=document.cookie.split(";"),n=0;n<a.length;n++){for(var r=a[n];" "==r.charAt(0);)r=r.substring(1);if(0==r.indexOf(t))return r.substring(t.length,r.length)}return""}function Pn(e,t,a){var n=new Date;n.setTime(n.getTime()+24*a*60*60*1e3);var r="expires="+n.toUTCString();document.cookie=e+"="+t+"; "+r}function Hn(){return"dgf_"+Math.round(1e4*Math.random())}function Un(t){var a={},n={};return{add:function(e,t){return a[e]=t,this},addAll:function(e){if(Array.isArray(e))for(var t in e)this.addAll(e[t]);else for(var a in e)this.add(a,e[a]);return this},lookup:function(e){return a[e]},create:function(e,t){return t.dialog?this.lookup(t.dialog).create(this,e,t):"string"==typeof t?this.lookup(t).create(this,e,t):t.extend&&this.lookup(t.extend)?this.lookup(t.extend).create(this,e,t):t.type?this.lookup(t.type).create(this,e,t):void 0},getTagFactory:function(){return t},validate:function(e){function t(e){if("object"===(void 0===e?"undefined":wo(e))){for(var a in e)if("reader"===a&&("dgf.readerDSV"===e.reader.type||e.reader.cacheData||delete e.reader.data),"dgf.schedulerUndefined"!==e[a]&&"dgf.readerUndefined"!==e[a]&&"dgf.containerTemplateUndefined"!==e[a]&&"dgf.templateUndefined"!==e[a]&&"dgf.styleUndefined"!==e[a])Dn(e[a])||"n/a"===e[a]||"string"==typeof e[a]&&0===e[a].trim().length?delete e[a]:(["width","height","top","right","bottom","left","xTicks","yTicks","y1Ticks"].indexOf(a)>-1&&(isNaN(e[a])||(e[a]=+e[a])),e[a]&&t(e[a]));else for(var n in e)delete e[n];for(var r in e)Dn(e[r])&&delete e[r]}return e}return e=t(e)},typesByCategory:function(e){function t(e,a){
for(var n=0;n<e.length;n++)if(e[n].menu&&e[n].text===a[0])return a[1]?t(e[n].menu,a.slice(1)):e[n].menu.sort(function(e,t){return Ln(e.text,t.text)});var r=[];return e.push({text:a[0],menu:r}),a[1]?t(r,a.slice(1)):r}e=Array.isArray(e)?e:e.split(",");var a=n[e.join("_")];if(a)return a;var r=this.getTagFactory().typesByCategory(e),o=[];for(var i in r){var l=r[i],u=t(o,l.category);l.category[0],u.push({text:l.title,value:l.key})}return o[0]&&o[0].menu&&(o=o[0].menu.sort(function(e,t){return Ln(e.text,t.text)}),n[e.join("_")]=o),o},changeType:function(t,a,n){var r=n.getRoot(),o=r.items()[0],i=r.toJSON();i[t+"type"]=a;var l=this.create("dialog_",Fn(i)),u=e.ui.Factory.create({type:"tabpanel",items:l.body});r.replace(o,u);for(var c=document.getElementById(r._id+"-body");c.firstChild;)c.removeChild(c.firstChild);u.renderTo(c).reflow();var f=o.activeTabId,s=f?+f.match(/\d+/)[0]:0;u.activateTab(s),Pn(i.nodeId+":activeTabId",f,60),r.fromJSON(i),this.setMenu(r,Fn(i))},setMenu:function(e,t){if(t.reader){var a=this.getTagFactory().create(null,t.reader);a.callback(function(t){if(t.datum()&&t.datum()[0]){var a,n,r=Di(t.datum()[0]);a=[{text:"n/a",value:"n/a"}].concat(r.map(function(e){return{text:e,value:e}})).concat([{text:"keysAt",menu:r.map(function(e,t){return{text:t+"",value:"keysAt("+t+")"}})}]),n=e.find(".parsemap");for(i in n)n[i].settings&&(n[i].settings.menu=a,n[i].disabled(!1));a=[{text:"n/a",value:"n/a"}].concat(r.map(function(e){return{text:e,value:"data("+e+")"}})).concat([{text:"dataAt",menu:r.map(function(e,t){return{text:t+"",value:"dataAt("+t+")"}})}]).concat([{text:"keysAt",menu:r.map(function(e,t){return{text:t+"",value:"keysAt("+t+")"}})}]).concat([{text:"key",menu:["xKey","yKey","y1Key","colorKey","textKey","keyKey"].map(function(e){return{text:e,value:e+"()"}})}]).concat([{text:"const",menu:r.map(function(e){return{text:e,value:"const("+e+")"}})}]),n=e.find(".datamap");for(i in n)n[i].settings&&(n[i].settings.menu=a,n[i].disabled(!1));a=[{text:"n/a",value:"n/a"}],a.push({text:"map",menu:[{text:"auto",value:"map()"}].concat(r.map(function(e){return{text:e,value:"map("+e+")"}})).concat([{text:"mapAt",menu:r.map(function(e,t){return{text:t+"",value:"mapAt("+t+")"}})}])}),a.push({text:"extent",menu:[{text:"auto",value:"extent()"}].concat(r.map(function(e){return{text:e,value:"extent("+e+")"}})).concat([{text:"extentAt",menu:r.map(function(e,t){return{text:t+"",value:"extentAt("+t+")"}})}])}),a.push({text:"extentZero",menu:[{text:"auto",value:"extentZero()"}].concat(r.map(function(e){return{text:e,value:"extentZero("+e+")"}})).concat([{text:"extentZeroAt",menu:r.map(function(e,t){return{text:t+"",value:"extentZeroAt("+t+")"}})}])}),a.push({text:"keys",value:"keys()"}),n=e.find(".domainmap");for(i in n)n[i].settings&&(n[i].settings.menu=a,n[i].disabled(!1));var o=[0,50,100,250,500,1e3,2500,5e3,1e4];a=[{text:"n/a",value:"n/a"}],a.push({text:"absolute",menu:o.map(function(e){return{text:e+" ms",value:e}})}),a.push({text:"indexed",menu:o.map(function(e){return{text:e+" ms",value:"indexed("+e+")"}})}),a.push({text:"proportional",menu:r.map(function(e){return{text:e,menu:o.map(function(t){return{text:t+" ms",value:"proportional("+e+","+t+")"}})}})}),n=e.find(".delaymap");for(var i in n)n[i].settings&&(n[i].settings.menu=a,n[i].disabled(!1));a=[{text:"n/a",value:"n/a"}],a.push({text:"absolute",menu:o.map(function(e){return{text:e+" ms",value:e}})}),a.push({text:"indexed",menu:o.map(function(e){return{text:e+" ms",value:"indexed("+e+")"}})}),a.push({text:"proportional",menu:r.map(function(e){return{text:e,menu:o.map(function(t){return{text:t+" ms",value:"proportional("+e+","+t+")"}})}})}),n=e.find(".durationmap");for(i in n)n[i].settings&&(n[i].settings.menu=a,n[i].disabled(!1))}}),e.find(".datamap").disabled(!0),e.find(".domainmap").disabled(!0),e.find(".delaymap").disabled(!0),e.find(".durationmap").disabled(!0),Er(document.createDocumentFragment()).call(a)}},postRenderDialog:function(e,t){var a=e.control.getRoot();a.reflow();var n=Math.min(a._layoutRect.w,.95*window.innerWidth),r=Math.min(a._layoutRect.h,.95*window.innerHeight);a.resizeTo(n,r);var o=e.target.rootControl.items().toArray()[0],i=En(t.nodeId+":activeTabId"),l=i?+i.match(/\d+/)[0]:0;l<o.items().length&&o.activateTab(l),this.setMenu(e.control.getRoot(),t)}}}function In(e){return Un(e).addAll([fu,su,du,hu,pu,mu,bu,yu,vu,xu,gu,_u,wu,Mu,Su,Tu,ku,Au,Cu,Yu,Fu,Nu,Du])}var Ln=function(e,t){return e<t?-1:e>t?1:e>=t?0:NaN},Rn=function(e){return 1===e.length&&(e=a(e)),{left:function(t,a,n,r){for(null==n&&(n=0),null==r&&(r=t.length);n<r;){var o=n+r>>>1;e(t[o],a)<0?n=o+1:r=o}return n},right:function(t,a,n,r){for(null==n&&(n=0),null==r&&(r=t.length);n<r;){var o=n+r>>>1;e(t[o],a)>0?r=o:n=o+1}return n}}}(Ln),Bn=(Rn.right,Math.sqrt(50),Math.sqrt(10),Math.sqrt(2),{value:function(){}});r.prototype=n.prototype={constructor:r,on:function(e,t){var a,n=this._,r=o(e+"",n),u=-1,c=r.length;{if(!(arguments.length<2)){if(null!=t&&"function"!=typeof t)throw new Error("invalid callback: "+t);for(;++u<c;)if(a=(e=r[u]).type)n[a]=l(n[a],e.name,t);else if(null==t)for(a in n)n[a]=l(n[a],e.name,null);return this}for(;++u<c;)if((a=(e=r[u]).type)&&(a=i(n[a],e.name)))return a}},copy:function(){var e={},t=this._;for(var a in t)e[a]=t[a].slice();return new r(e)},call:function(e,t){if((a=arguments.length-2)>0)for(var a,n,r=new Array(a),o=0;o<a;++o)r[o]=arguments[o+2];if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(n=this._[e],o=0,a=n.length;o<a;++o)n[o].value.apply(t,r)},apply:function(e,t,a){if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(var n=this._[e],r=0,o=n.length;r<o;++r)n[r].value.apply(t,a)}};var Xn="http://www.w3.org/1999/xhtml",qn={svg:"http://www.w3.org/2000/svg",xhtml:Xn,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},On=function(e){var t=e+="",a=t.indexOf(":");return a>=0&&"xmlns"!==(t=e.slice(0,a))&&(e=e.slice(a+1)),qn.hasOwnProperty(t)?{space:qn[t],local:e}:e},Wn=function(e){var t=On(e);return(t.local?c:u)(t)},zn=function(e){return function(){return this.matches(e)}};if("undefined"!=typeof document){var jn=document.documentElement;if(!jn.matches){var Zn=jn.webkitMatchesSelector||jn.msMatchesSelector||jn.mozMatchesSelector||jn.oMatchesSelector;zn=function(e){return function(){return Zn.call(this,e)}}}}var $n=zn,Vn={},Jn=null;if("undefined"!=typeof document){"onmouseenter"in document.documentElement||(Vn={mouseenter:"mouseover",mouseleave:"mouseout"})}var Gn=function(e,t,a){var n,r,o=d(e+""),i=o.length;{if(!(arguments.length<2)){for(l=t?p:h,null==a&&(a=!1),n=0;n<i;++n)this.each(l(o[n],t,a));return this}var l=this.node().__on;if(l)for(var u,c=0,f=l.length;c<f;++c)for(n=0,u=l[c];n<i;++n)if((r=o[n]).type===u.type&&r.name===u.name)return u.value}},Kn=function(e){return null==e?m:function(){return this.querySelector(e)}},Qn=function(e){"function"!=typeof e&&(e=Kn(e));for(var t=this._groups,a=t.length,n=new Array(a),r=0;r<a;++r)for(var o,i,l=t[r],u=l.length,c=n[r]=new Array(u),f=0;f<u;++f)(o=l[f])&&(i=e.call(o,o.__data__,f,l))&&("__data__"in o&&(i.__data__=o.__data__),c[f]=i);return new ee(n,this._parents)},er=function(e){return null==e?b:function(){return this.querySelectorAll(e)}},tr=function(e){"function"!=typeof e&&(e=er(e));for(var t=this._groups,a=t.length,n=[],r=[],o=0;o<a;++o)for(var i,l=t[o],u=l.length,c=0;c<u;++c)(i=l[c])&&(n.push(e.call(i,i.__data__,c,l)),r.push(i));return new ee(n,r)},ar=function(e){"function"!=typeof e&&(e=$n(e));for(var t=this._groups,a=t.length,n=new Array(a),r=0;r<a;++r)for(var o,i=t[r],l=i.length,u=n[r]=[],c=0;c<l;++c)(o=i[c])&&e.call(o,o.__data__,c,i)&&u.push(o);return new ee(n,this._parents)},nr=function(e){return new Array(e.length)},rr=function(){return new ee(this._enter||this._groups.map(nr),this._parents)};y.prototype={constructor:y,appendChild:function(e){return this._parent.insertBefore(e,this._next)},insertBefore:function(e,t){return this._parent.insertBefore(e,t)},querySelector:function(e){return this._parent.querySelector(e)},querySelectorAll:function(e){return this._parent.querySelectorAll(e)}};var or=function(e){return function(){return e}},ir="$",lr=function(e,t){if(!e)return h=new Array(this.size()),c=-1,this.each(function(e){h[++c]=e}),h;var a=t?x:v,n=this._parents,r=this._groups;"function"!=typeof e&&(e=or(e));for(var o=r.length,i=new Array(o),l=new Array(o),u=new Array(o),c=0;c<o;++c){var f=n[c],s=r[c],d=s.length,h=e.call(f,f&&f.__data__,c,n),p=h.length,m=l[c]=new Array(p),b=i[c]=new Array(p);a(f,s,m,b,u[c]=new Array(d),h,t);for(var y,g,_=0,w=0;_<p;++_)if(y=m[_]){for(_>=w&&(w=_+1);!(g=b[w])&&++w<p;);y._next=g||null}}return i=new ee(i,n),i._enter=l,i._exit=u,i},ur=function(){return new ee(this._exit||this._groups.map(nr),this._parents)},cr=function(e){for(var t=this._groups,a=e._groups,n=t.length,r=a.length,o=Math.min(n,r),i=new Array(n),l=0;l<o;++l)for(var u,c=t[l],f=a[l],s=c.length,d=i[l]=new Array(s),h=0;h<s;++h)(u=c[h]||f[h])&&(d[h]=u);for(;l<n;++l)i[l]=t[l];return new ee(i,this._parents)},fr=function(){for(var e=this._groups,t=-1,a=e.length;++t<a;)for(var n,r=e[t],o=r.length-1,i=r[o];--o>=0;)(n=r[o])&&(i&&i!==n.nextSibling&&i.parentNode.insertBefore(n,i),i=n);return this},sr=function(e){function t(t,a){return t&&a?e(t.__data__,a.__data__):!t-!a}e||(e=g);for(var a=this._groups,n=a.length,r=new Array(n),o=0;o<n;++o){for(var i,l=a[o],u=l.length,c=r[o]=new Array(u),f=0;f<u;++f)(i=l[f])&&(c[f]=i);c.sort(t)}return new ee(r,this._parents).order()},dr=function(){var e=arguments[0];return arguments[0]=this,e.apply(null,arguments),this},hr=function(){var e=new Array(this.size()),t=-1;return this.each(function(){e[++t]=this}),e},pr=function(){for(var e=this._groups,t=0,a=e.length;t<a;++t)for(var n=e[t],r=0,o=n.length;r<o;++r){var i=n[r];if(i)return i}return null},mr=function(){var e=0;return this.each(function(){++e}),e},br=function(){return!this.node()},yr=function(e){for(var t=this._groups,a=0,n=t.length;a<n;++a)for(var r,o=t[a],i=0,l=o.length;i<l;++i)(r=o[i])&&e.call(r,r.__data__,i,o);return this},vr=function(e,t){var a=On(e);if(arguments.length<2){var n=this.node();return a.local?n.getAttributeNS(a.space,a.local):n.getAttribute(a)}return this.each((null==t?a.local?w:_:"function"==typeof t?a.local?k:T:a.local?S:M)(a,t))},xr=function(e){return e.ownerDocument&&e.ownerDocument.defaultView||e.document&&e||e.defaultView},gr=function(e,t,a){var n;return arguments.length>1?this.each((null==t?A:"function"==typeof t?Y:C)(e,t,null==a?"":a)):xr(n=this.node()).getComputedStyle(n,null).getPropertyValue(e)},_r=function(e,t){return arguments.length>1?this.each((null==t?N:"function"==typeof t?D:F)(e,t)):this.node()[e]};H.prototype={add:function(e){this._names.indexOf(e)<0&&(this._names.push(e),this._node.setAttribute("class",this._names.join(" ")))},remove:function(e){var t=this._names.indexOf(e);t>=0&&(this._names.splice(t,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(e){return this._names.indexOf(e)>=0}};var wr=function(e,t){var a=E(e+"");if(arguments.length<2){for(var n=P(this.node()),r=-1,o=a.length;++r<o;)if(!n.contains(a[r]))return!1;return!0}return this.each(("function"==typeof t?B:t?L:R)(a,t))},Mr=function(e){return arguments.length?this.each(null==e?X:("function"==typeof e?O:q)(e)):this.node().textContent},Sr=function(e){return arguments.length?this.each(null==e?W:("function"==typeof e?j:z)(e)):this.node().innerHTML},Tr=function(){return this.each(Z)},kr=function(){return this.each($)},Ar=function(e){var t="function"==typeof e?e:Wn(e);return this.select(function(){return this.appendChild(t.apply(this,arguments))})},Cr=function(e,t){var a="function"==typeof e?e:Wn(e),n=null==t?V:"function"==typeof t?t:Kn(t);return this.select(function(){return this.insertBefore(a.apply(this,arguments),n.apply(this,arguments)||null)})},Yr=function(){return this.each(J)},Nr=function(e){return arguments.length?this.property("__data__",e):this.node().__data__},Fr=function(e,t){return this.each(("function"==typeof t?Q:K)(e,t))},Dr=[null];ee.prototype=te.prototype={constructor:ee,select:Qn,selectAll:tr,filter:ar,data:lr,enter:rr,exit:ur,merge:cr,order:fr,sort:sr,call:dr,nodes:hr,node:pr,size:mr,empty:br,each:yr,attr:vr,style:gr,property:_r,classed:wr,text:Mr,html:Sr,raise:Tr,lower:kr,append:Ar,insert:Cr,remove:Yr,datum:Nr,on:Gn,dispatch:Fr};var Er=function(e){return"string"==typeof e?new ee([[document.querySelector(e)]],[document.documentElement]):new ee([[e]],Dr)},Pr=function(e,t,a){e.prototype=t.prototype=a,a.constructor=e},Hr="\\s*([+-]?\\d+)\\s*",Ur="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",Ir="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Lr=/^#([0-9a-f]{3})$/,Rr=/^#([0-9a-f]{6})$/,Br=new RegExp("^rgb\\("+[Hr,Hr,Hr]+"\\)$"),Xr=new RegExp("^rgb\\("+[Ir,Ir,Ir]+"\\)$"),qr=new RegExp("^rgba\\("+[Hr,Hr,Hr,Ur]+"\\)$"),Or=new RegExp("^rgba\\("+[Ir,Ir,Ir,Ur]+"\\)$"),Wr=new RegExp("^hsl\\("+[Ur,Ir,Ir]+"\\)$"),zr=new RegExp("^hsla\\("+[Ur,Ir,Ir,Ur]+"\\)$"),jr={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};Pr(ne,re,{displayable:function(){return this.rgb().displayable()},toString:function(){return this.rgb()+""}}),Pr(ce,ue,ae(ne,{brighter:function(e){return e=null==e?1/.7:Math.pow(1/.7,e),new ce(this.r*e,this.g*e,this.b*e,this.opacity)},darker:function(e){return e=null==e?.7:Math.pow(.7,e),new ce(this.r*e,this.g*e,this.b*e,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},toString:function(){var e=this.opacity;return e=isNaN(e)?1:Math.max(0,Math.min(1,e)),(1===e?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===e?")":", "+e+")")}})),Pr(he,de,ae(ne,{brighter:function(e){return e=null==e?1/.7:Math.pow(1/.7,e),new he(this.h,this.s,this.l*e,this.opacity)},darker:function(e){return e=null==e?.7:Math.pow(.7,e),new he(this.h,this.s,this.l*e,this.opacity)},rgb:function(){var e=this.h%360+360*(this.h<0),t=isNaN(e)||isNaN(this.s)?0:this.s,a=this.l,n=a+(a<.5?a:1-a)*t,r=2*a-n;return new ce(pe(e>=240?e-240:e+120,r,n),pe(e,r,n),pe(e<120?e+240:e-120,r,n),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var Zr=Math.PI/180,$r=180/Math.PI,Vr=.95047,Jr=1,Gr=1.08883,Kr=4/29,Qr=6/29,eo=3*Qr*Qr,to=Qr*Qr*Qr;Pr(ye,be,ae(ne,{brighter:function(e){return new ye(this.l+18*(null==e?1:e),this.a,this.b,this.opacity)},darker:function(e){return new ye(this.l-18*(null==e?1:e),this.a,this.b,this.opacity)},rgb:function(){var e=(this.l+16)/116,t=isNaN(this.a)?e:e+this.a/500,a=isNaN(this.b)?e:e-this.b/200;return e=Jr*xe(e),t=Vr*xe(t),a=Gr*xe(a),new ce(ge(3.2404542*t-1.5371385*e-.4985314*a),ge(-.969266*t+1.8760108*e+.041556*a),ge(.0556434*t-.2040259*e+1.0572252*a),this.opacity)}})),Pr(Se,Me,ae(ne,{brighter:function(e){return new Se(this.h,this.c,this.l+18*(null==e?1:e),this.opacity)},darker:function(e){return new Se(this.h,this.c,this.l-18*(null==e?1:e),this.opacity)},rgb:function(){return me(this).rgb()}}));var ao=-.14861,no=1.78277,ro=-.29227,oo=-.90649,io=1.97294,lo=io*oo,uo=io*no,co=no*ro-oo*ao;Pr(Ae,ke,ae(ne,{brighter:function(e){return e=null==e?1/.7:Math.pow(1/.7,e),new Ae(this.h,this.s,this.l*e,this.opacity)},darker:function(e){return e=null==e?.7:Math.pow(.7,e),new Ae(this.h,this.s,this.l*e,this.opacity)},rgb:function(){var e=isNaN(this.h)?0:(this.h+120)*Zr,t=+this.l,a=isNaN(this.s)?0:this.s*t*(1-t),n=Math.cos(e),r=Math.sin(e);return new ce(255*(t+a*(ao*n+no*r)),255*(t+a*(ro*n+oo*r)),255*(t+a*(io*n)),this.opacity)}}));var fo,so,ho,po,mo=function(e){var t=e.length-1;return function(a){var n=a<=0?a=0:a>=1?(a=1,t-1):Math.floor(a*t),r=e[n],o=e[n+1],i=n>0?e[n-1]:2*r-o,l=n<t-1?e[n+2]:2*o-r;return Ce((a-n/t)*t,i,r,o,l)}},bo=function(e){return function(){return e}},yo=function e(t){function a(e,t){var a=n((e=ue(e)).r,(t=ue(t)).r),r=n(e.g,t.g),o=n(e.b,t.b),i=Ee(e.opacity,t.opacity);return function(t){return e.r=a(t),e.g=r(t),e.b=o(t),e.opacity=i(t),e+""}}var n=De(t);return a.gamma=e,a}(1),vo=function(e){return function(t){var a,n,r=t.length,o=new Array(r),i=new Array(r),l=new Array(r);for(a=0;a<r;++a)n=ue(t[a]),o[a]=n.r||0,i[a]=n.g||0,l[a]=n.b||0;return o=e(o),i=e(i),l=e(l),n.opacity=1,function(e){return n.r=o(e),n.g=i(e),n.b=l(e),n+""}}}(mo),xo=function(e,t){var a,n=t?t.length:0,r=e?Math.min(n,e.length):0,o=new Array(n),i=new Array(n);for(a=0;a<r;++a)o[a]=Ao(e[a],t[a]);for(;a<n;++a)i[a]=t[a];return function(e){for(a=0;a<r;++a)i[a]=o[a](e);return i}},go=function(e,t){var a=new Date;return e=+e,t-=e,function(n){return a.setTime(e+t*n),a}},_o=function(e,t){return e=+e,t-=e,function(a){return e+t*a}},wo="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Mo=function(e,t){var a,n={},r={};null!==e&&"object"===(void 0===e?"undefined":wo(e))||(e={}),null!==t&&"object"===(void 0===t?"undefined":wo(t))||(t={});for(a in t)a in e?n[a]=Ao(e[a],t[a]):r[a]=t[a];return function(e){for(a in n)r[a]=n[a](e);return r}},So=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,To=new RegExp(So.source,"g"),ko=function(e,t){var a,n,r,o=So.lastIndex=To.lastIndex=0,i=-1,l=[],u=[];for(e+="",t+="";(a=So.exec(e))&&(n=To.exec(t));)(r=n.index)>o&&(r=t.slice(o,r),l[i]?l[i]+=r:l[++i]=r),(a=a[0])===(n=n[0])?l[i]?l[i]+=n:l[++i]=n:(l[++i]=null,u.push({i:i,x:_o(a,n)})),o=To.lastIndex;return o<t.length&&(r=t.slice(o),l[i]?l[i]+=r:l[++i]=r),l.length<2?u[0]?He(u[0].x):Pe(t):(t=u.length,function(e){for(var a,n=0;n<t;++n)l[(a=u[n]).i]=a.x(e);return l.join("")})},Ao=function(e,t){var a,n=void 0===t?"undefined":wo(t);return null==t||"boolean"===n?bo(t):("number"===n?_o:"string"===n?(a=re(t))?(t=a,yo):ko:t instanceof re?yo:t instanceof Date?go:Array.isArray(t)?xo:isNaN(t)?Mo:_o)(e,t)},Co=180/Math.PI,Yo={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},No=function(e,t,a,n,r,o){var i,l,u;return(i=Math.sqrt(e*e+t*t))&&(e/=i,t/=i),(u=e*a+t*n)&&(a-=e*u,n-=t*u),(l=Math.sqrt(a*a+n*n))&&(a/=l,n/=l,u/=l),e*n<t*a&&(e=-e,t=-t,u=-u,i=-i),{translateX:r,translateY:o,rotate:Math.atan2(t,e)*Co,skewX:Math.atan(u)*Co,scaleX:i,scaleY:l}},Fo=Le(Ue,"px, ","px)","deg)"),Do=Le(Ie,", ",")",")");Re(Fe);var Eo,Po,Ho=Re(Ee),Uo=0,Io=0,Lo=0,Ro=1e3,Bo=0,Xo=0,qo=0,Oo="object"===("undefined"==typeof performance?"undefined":wo(performance))&&performance.now?performance:Date,Wo="function"==typeof requestAnimationFrame?requestAnimationFrame:function(e){setTimeout(e,17)};qe.prototype=Oe.prototype={constructor:qe,restart:function(e,t,a){if("function"!=typeof e)throw new TypeError("callback is not a function");a=(null==a?Be():+a)+(null==t?0:+t),this._next||Po===this||(Po?Po._next=this:Eo=this,Po=this),this._call=e,this._time=a,$e()},stop:function(){this._call&&(this._call=null,this._time=1/0,$e())}};var zo=function(e,t,a){var n=new qe;return t=null==t?0:+t,n.restart(function(a){n.stop(),e(a+t)},t,a),n},jo=n("start","end","interrupt"),Zo=[],$o=0,Vo=1,Jo=2,Go=3,Ko=4,Qo=5,ei=6,ti=function(e,t,a,n,r,o){var i=e.__transition;if(i){if(a in i)return}else e.__transition={};Ke(e,a,{name:t,index:n,group:r,on:jo,tween:Zo,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:$o})},ai=function(e,t){var a,n,r,o=e.__transition,i=!0;if(o){t=null==t?null:t+"";for(r in o)(a=o[r]).name===t?(n=a.state>Jo&&a.state<Qo,a.state=ei,a.timer.stop(),n&&a.on.call("interrupt",e,e.__data__,a.index,a.group),delete o[r]):i=!1;i&&delete e.__transition}},ni=function(e){return this.each(function(){ai(this,e)})},ri=function(e,t){var a=this._id;if(e+="",arguments.length<2){for(var n,r=Ge(this.node(),a).tween,o=0,i=r.length;o<i;++o)if((n=r[o]).name===e)return n.value;return null}return this.each((null==t?Qe:et)(a,e,t))},oi=function(e,t){var a;return("number"==typeof t?_o:t instanceof re?yo:(a=re(t))?(t=a,yo):ko)(e,t)},ii=function(e,t){var a=On(e),n="transform"===a?Do:oi;return this.attrTween(e,"function"==typeof t?(a.local?lt:it)(a,n,tt(this,"attr."+e,t)):null==t?(a.local?nt:at)(a):(a.local?ot:rt)(a,n,t+""))},li=function(e,t){var a="attr."+e;if(arguments.length<2)return(a=this.tween(a))&&a._value;if(null==t)return this.tween(a,null);if("function"!=typeof t)throw new Error;var n=On(e);return this.tween(a,(n.local?ut:ct)(n,t))},ui=function(e){var t=this._id;return arguments.length?this.each(("function"==typeof e?ft:st)(t,e)):Ge(this.node(),t).delay},ci=function(e){var t=this._id;return arguments.length?this.each(("function"==typeof e?dt:ht)(t,e)):Ge(this.node(),t).duration},fi=function(e){var t=this._id;return arguments.length?this.each(pt(t,e)):Ge(this.node(),t).ease},si=function(e){"function"!=typeof e&&(e=$n(e));for(var t=this._groups,a=t.length,n=new Array(a),r=0;r<a;++r)for(var o,i=t[r],l=i.length,u=n[r]=[],c=0;c<l;++c)(o=i[c])&&e.call(o,o.__data__,c,i)&&u.push(o);return new Tt(n,this._parents,this._name,this._id)},di=function(e){if(e._id!==this._id)throw new Error;for(var t=this._groups,a=e._groups,n=t.length,r=a.length,o=Math.min(n,r),i=new Array(n),l=0;l<o;++l)for(var u,c=t[l],f=a[l],s=c.length,d=i[l]=new Array(s),h=0;h<s;++h)(u=c[h]||f[h])&&(d[h]=u);for(;l<n;++l)i[l]=t[l];return new Tt(i,this._parents,this._name,this._id)},hi=function(e,t){var a=this._id;return arguments.length<2?Ge(this.node(),a).on.on(e):this.each(bt(a,e,t))},pi=function(){return this.on("end.remove",yt(this._id))},mi=function(e){var t=this._name,a=this._id;"function"!=typeof e&&(e=Kn(e));for(var n=this._groups,r=n.length,o=new Array(r),i=0;i<r;++i)for(var l,u,c=n[i],f=c.length,s=o[i]=new Array(f),d=0;d<f;++d)(l=c[d])&&(u=e.call(l,l.__data__,d,c))&&("__data__"in l&&(u.__data__=l.__data__),s[d]=u,ti(s[d],t,a,d,s,Ge(l,a)));return new Tt(o,this._parents,t,a)},bi=function(e){var t=this._name,a=this._id;"function"!=typeof e&&(e=er(e));for(var n=this._groups,r=n.length,o=[],i=[],l=0;l<r;++l)for(var u,c=n[l],f=c.length,s=0;s<f;++s)if(u=c[s]){for(var d,h=e.call(u,u.__data__,s,c),p=Ge(u,a),m=0,b=h.length;m<b;++m)(d=h[m])&&ti(d,t,a,m,h,p);o.push(h),i.push(u)}return new Tt(o,i,t,a)},yi=te.prototype.constructor,vi=function(){return new yi(this._groups,this._parents)},xi=function(e,t,a){var n="transform"==(e+="")?Fo:oi;return null==t?this.styleTween(e,vt(e,n)).on("end.style."+e,xt(e)):this.styleTween(e,"function"==typeof t?_t(e,n,tt(this,"style."+e,t)):gt(e,n,t+""),a)},gi=function(e,t,a){var n="style."+(e+="");if(arguments.length<2)return(n=this.tween(n))&&n._value;if(null==t)return this.tween(n,null);if("function"!=typeof t)throw new Error;return this.tween(n,wt(e,t,null==a?"":a))},_i=function(e){return this.tween("text","function"==typeof e?St(tt(this,"text",e)):Mt(null==e?"":e+""))},wi=function(){for(var e=this._name,t=this._id,a=At(),n=this._groups,r=n.length,o=0;o<r;++o)for(var i,l=n[o],u=l.length,c=0;c<u;++c)if(i=l[c]){var f=Ge(i,t);ti(i,e,a,c,l,{time:f.time+f.delay+f.duration,delay:0,duration:f.duration,ease:f.ease})}return new Tt(n,this._parents,e,a)},Mi=0,Si=te.prototype;Tt.prototype=kt.prototype={constructor:Tt,select:mi,selectAll:bi,filter:si,merge:di,selection:vi,transition:wi,call:Si.call,nodes:Si.nodes,node:Si.node,size:Si.size,empty:Si.empty,each:Si.each,on:hi,attr:ii,attrTween:li,style:xi,styleTween:gi,text:_i,remove:pi,tween:ri,delay:ui,duration:ci,ease:fi};var Ti=(function e(t){function a(e){return Math.pow(e,t)}return t=+t,a.exponent=e,a}(3),function e(t){function a(e){return 1-Math.pow(1-e,t)}return t=+t,a.exponent=e,a}(3),function e(t){function a(e){return((e*=2)<=1?Math.pow(e,t):2-Math.pow(2-e,t))/2}return t=+t,a.exponent=e,a}(3),function e(t){function a(e){return e*e*((t+1)*e-t)}return t=+t,a.overshoot=e,a}(1.70158),function e(t){function a(e){return--e*e*((t+1)*e+t)+1}return t=+t,a.overshoot=e,a}(1.70158),function e(t){function a(e){return((e*=2)<1?e*e*((t+1)*e-t):(e-=2)*e*((t+1)*e+t)+2)/2}return t=+t,a.overshoot=e,a}(1.70158),2*Math.PI),ki=(function e(t,a){function n(e){return t*Math.pow(2,10*--e)*Math.sin((r-e)/a)}var r=Math.asin(1/(t=Math.max(1,t)))*(a/=Ti);return n.amplitude=function(t){return e(t,a*Ti)},n.period=function(a){return e(t,a)},n}(1,.3),function e(t,a){function n(e){return 1-t*Math.pow(2,-10*(e=+e))*Math.sin((e+r)/a)}var r=Math.asin(1/(t=Math.max(1,t)))*(a/=Ti);return n.amplitude=function(t){return e(t,a*Ti)},n.period=function(a){return e(t,a)},n}(1,.3),function e(t,a){function n(e){return((e=2*e-1)<0?t*Math.pow(2,10*e)*Math.sin((r-e)/a):2-t*Math.pow(2,-10*e)*Math.sin((r+e)/a))/2}var r=Math.asin(1/(t=Math.max(1,t)))*(a/=Ti);return n.amplitude=function(t){return e(t,a*Ti)},n.period=function(a){return e(t,a)},n}(1,.3),{time:null,delay:0,duration:250,ease:Ct}),Ai=function(e){var t,a;e instanceof Tt?(t=e._id,e=e._name):(t=At(),(a=ki).time=Be(),e=null==e?null:e+"");for(var n=this._groups,r=n.length,o=0;o<r;++o)for(var i,l=n[o],u=l.length,c=0;c<u;++c)(i=l[c])&&ti(i,e,t,c,l,a||Yt(i,t));return new Tt(n,this._parents,e,t)};te.prototype.interrupt=ni,te.prototype.transition=Ai;var Ci=(["e","w"].map(Nt),["n","s"].map(Nt),["n","e","s","w","nw","ne","se","sw"].map(Nt),Math.PI,Math.max,Math.PI),Yi=2*Ci,Ni=Yi-1e-6;Ft.prototype=Dt.prototype={constructor:Ft,moveTo:function(e,t){this._+="M"+(this._x0=this._x1=+e)+","+(this._y0=this._y1=+t)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(e,t){this._+="L"+(this._x1=+e)+","+(this._y1=+t)},quadraticCurveTo:function(e,t,a,n){this._+="Q"+ +e+","+ +t+","+(this._x1=+a)+","+(this._y1=+n)},bezierCurveTo:function(e,t,a,n,r,o){this._+="C"+ +e+","+ +t+","+ +a+","+ +n+","+(this._x1=+r)+","+(this._y1=+o)},arcTo:function(e,t,a,n,r){e=+e,t=+t,a=+a,n=+n,r=+r;var o=this._x1,i=this._y1,l=a-e,u=n-t,c=o-e,f=i-t,s=c*c+f*f;if(r<0)throw new Error("negative radius: "+r);if(null===this._x1)this._+="M"+(this._x1=e)+","+(this._y1=t);else if(s>1e-6)if(Math.abs(f*l-u*c)>1e-6&&r){var d=a-o,h=n-i,p=l*l+u*u,m=d*d+h*h,b=Math.sqrt(p),y=Math.sqrt(s),v=r*Math.tan((Ci-Math.acos((p+s-m)/(2*b*y)))/2),x=v/y,g=v/b;Math.abs(x-1)>1e-6&&(this._+="L"+(e+x*c)+","+(t+x*f)),this._+="A"+r+","+r+",0,0,"+ +(f*d>c*h)+","+(this._x1=e+g*l)+","+(this._y1=t+g*u)}else this._+="L"+(this._x1=e)+","+(this._y1=t);else;},arc:function(e,t,a,n,r,o){e=+e,t=+t,a=+a;var i=a*Math.cos(n),l=a*Math.sin(n),u=e+i,c=t+l,f=1^o,s=o?n-r:r-n;if(a<0)throw new Error("negative radius: "+a);null===this._x1?this._+="M"+u+","+c:(Math.abs(this._x1-u)>1e-6||Math.abs(this._y1-c)>1e-6)&&(this._+="L"+u+","+c),a&&(s<0&&(s=s%Yi+Yi),s>Ni?this._+="A"+a+","+a+",0,1,"+f+","+(e-i)+","+(t-l)+"A"+a+","+a+",0,1,"+f+","+(this._x1=u)+","+(this._y1=c):s>1e-6&&(this._+="A"+a+","+a+",0,"+ +(s>=Ci)+","+f+","+(this._x1=e+a*Math.cos(r))+","+(this._y1=t+a*Math.sin(r))))},rect:function(e,t,a,n){this._+="M"+(this._x0=this._x1=+e)+","+(this._y0=this._y1=+t)+"h"+ +a+"v"+ +n+"h"+-a+"Z"},toString:function(){return this._}};Et.prototype=Pt.prototype={constructor:Et,has:function(e){return"$"+e in this},get:function(e){return this["$"+e]},set:function(e,t){return this["$"+e]=t,this},remove:function(e){var t="$"+e;return t in this&&delete this[t]},clear:function(){for(var e in this)"$"===e[0]&&delete this[e]},keys:function(){var e=[];for(var t in this)"$"===t[0]&&e.push(t.slice(1));return e},values:function(){var e=[];for(var t in this)"$"===t[0]&&e.push(this[t]);return e},entries:function(){var e=[];for(var t in this)"$"===t[0]&&e.push({key:t.slice(1),value:this[t]});return e},size:function(){var e=0;for(var t in this)"$"===t[0]&&++e;return e},empty:function(){for(var e in this)if("$"===e[0])return!1;return!0},each:function(e){for(var t in this)"$"===t[0]&&e(this[t],t.slice(1),this)}};var Fi=Pt.prototype;Ht.prototype=Ut.prototype={constructor:Ht,has:Fi.has,add:function(e){return e+="",this["$"+e]=e,this},remove:Fi.remove,clear:Fi.clear,values:Fi.keys,size:Fi.size,empty:Fi.empty,each:Fi.each};var Di=function(e){var t=[];for(var a in e)t.push(a);return t},Ei=function(e){function t(e,t){var n,r,o=a(e,function(e,a){if(n)return n(e,a-1);r=e,n=t?Lt(e,t):It(e)});return o.columns=r,o}function a(e,t){function a(){if(f>=c)return i;if(r)return r=!1,o;var t,a=f;if(34===e.charCodeAt(a)){for(var n=a;n++<c;)if(34===e.charCodeAt(n)){if(34!==e.charCodeAt(n+1))break;++n}return f=n+2,t=e.charCodeAt(n+1),13===t?(r=!0,10===e.charCodeAt(n+2)&&++f):10===t&&(r=!0),e.slice(a+1,n).replace(/""/g,'"')}for(;f<c;){var l=1;if(10===(t=e.charCodeAt(f++)))r=!0;else if(13===t)r=!0,10===e.charCodeAt(f)&&(++f,++l);else if(t!==u)continue;return e.slice(a,f-l)}return e.slice(a)}for(var n,r,o={},i={},l=[],c=e.length,f=0,s=0;(n=a())!==i;){for(var d=[];n!==o&&n!==i;)d.push(n),n=a();t&&null==(d=t(d,s++))||l.push(d)}return l}function n(t,a){return null==a&&(a=Rt(t)),[a.map(i).join(e)].concat(t.map(function(t){return a.map(function(e){return i(t[e])}).join(e)})).join("\n")}function r(e){return e.map(o).join("\n")}function o(t){return t.map(i).join(e)}function i(e){return null==e?"":l.test(e+="")?'"'+e.replace(/\"/g,'""')+'"':e}var l=new RegExp('["'+e+"\n\r]"),u=e.charCodeAt(0);return{parse:t,parseRows:a,format:n,formatRows:r}},Pi=Ei(","),Hi=Pi.parse,Ui=Ei("\t"),Ii=Ui.parse,Li=function(e){var t=+this._x.call(null,e),a=+this._y.call(null,e);return Bt(this.cover(t,a),t,a,e)},Ri=function(e,t){
if(isNaN(e=+e)||isNaN(t=+t))return this;var a=this._x0,n=this._y0,r=this._x1,o=this._y1;if(isNaN(a))r=(a=Math.floor(e))+1,o=(n=Math.floor(t))+1;else{if(!(a>e||e>r||n>t||t>o))return this;var i,l,u=r-a,c=this._root;switch(l=(t<(n+o)/2)<<1|e<(a+r)/2){case 0:do{i=new Array(4),i[l]=c,c=i}while(u*=2,r=a+u,o=n+u,e>r||t>o);break;case 1:do{i=new Array(4),i[l]=c,c=i}while(u*=2,a=r-u,o=n+u,a>e||t>o);break;case 2:do{i=new Array(4),i[l]=c,c=i}while(u*=2,r=a+u,n=o-u,e>r||n>t);break;case 3:do{i=new Array(4),i[l]=c,c=i}while(u*=2,a=r-u,n=o-u,a>e||n>t)}this._root&&this._root.length&&(this._root=c)}return this._x0=a,this._y0=n,this._x1=r,this._y1=o,this},Bi=function(){var e=[];return this.visit(function(t){if(!t.length)do{e.push(t.data)}while(t=t.next)}),e},Xi=function(e){return arguments.length?this.cover(+e[0][0],+e[0][1]).cover(+e[1][0],+e[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},qi=function(e,t,a,n,r){this.node=e,this.x0=t,this.y0=a,this.x1=n,this.y1=r},Oi=function(e,t,a){var n,r,o,i,l,u,c,f=this._x0,s=this._y0,d=this._x1,h=this._y1,p=[],m=this._root;for(m&&p.push(new qi(m,f,s,d,h)),null==a?a=1/0:(f=e-a,s=t-a,d=e+a,h=t+a,a*=a);u=p.pop();)if(!(!(m=u.node)||(r=u.x0)>d||(o=u.y0)>h||(i=u.x1)<f||(l=u.y1)<s))if(m.length){var b=(r+i)/2,y=(o+l)/2;p.push(new qi(m[3],b,y,i,l),new qi(m[2],r,y,b,l),new qi(m[1],b,o,i,y),new qi(m[0],r,o,b,y)),(c=(t>=y)<<1|e>=b)&&(u=p[p.length-1],p[p.length-1]=p[p.length-1-c],p[p.length-1-c]=u)}else{var v=e-+this._x.call(null,m.data),x=t-+this._y.call(null,m.data),g=v*v+x*x;if(g<a){var _=Math.sqrt(a=g);f=e-_,s=t-_,d=e+_,h=t+_,n=m.data}}return n},Wi=function(e){if(isNaN(o=+this._x.call(null,e))||isNaN(i=+this._y.call(null,e)))return this;var t,a,n,r,o,i,l,u,c,f,s,d,h=this._root,p=this._x0,m=this._y0,b=this._x1,y=this._y1;if(!h)return this;if(h.length)for(;;){if((c=o>=(l=(p+b)/2))?p=l:b=l,(f=i>=(u=(m+y)/2))?m=u:y=u,t=h,!(h=h[s=f<<1|c]))return this;if(!h.length)break;(t[s+1&3]||t[s+2&3]||t[s+3&3])&&(a=t,d=s)}for(;h.data!==e;)if(n=h,!(h=h.next))return this;return(r=h.next)&&delete h.next,n?(r?n.next=r:delete n.next,this):t?(r?t[s]=r:delete t[s],(h=t[0]||t[1]||t[2]||t[3])&&h===(t[3]||t[2]||t[1]||t[0])&&!h.length&&(a?a[d]=h:this._root=h),this):(this._root=r,this)},zi=function(){return this._root},ji=function(){var e=0;return this.visit(function(t){if(!t.length)do{++e}while(t=t.next)}),e},Zi=function(e){var t,a,n,r,o,i,l=[],u=this._root;for(u&&l.push(new qi(u,this._x0,this._y0,this._x1,this._y1));t=l.pop();)if(!e(u=t.node,n=t.x0,r=t.y0,o=t.x1,i=t.y1)&&u.length){var c=(n+o)/2,f=(r+i)/2;(a=u[3])&&l.push(new qi(a,c,f,o,i)),(a=u[2])&&l.push(new qi(a,n,f,c,i)),(a=u[1])&&l.push(new qi(a,c,r,o,f)),(a=u[0])&&l.push(new qi(a,n,r,c,f))}return this},$i=function(e){var t,a=[],n=[];for(this._root&&a.push(new qi(this._root,this._x0,this._y0,this._x1,this._y1));t=a.pop();){var r=t.node;if(r.length){var o,i=t.x0,l=t.y0,u=t.x1,c=t.y1,f=(i+u)/2,s=(l+c)/2;(o=r[0])&&a.push(new qi(o,i,l,f,s)),(o=r[1])&&a.push(new qi(o,f,l,u,s)),(o=r[2])&&a.push(new qi(o,i,s,f,c)),(o=r[3])&&a.push(new qi(o,f,s,u,c))}n.push(t)}for(;t=n.pop();)e(t.node,t.x0,t.y0,t.x1,t.y1);return this},Vi=function(e){return arguments.length?(this._x=e,this):this._x},Ji=function(e){return arguments.length?(this._y=e,this):this._y},Gi=zt.prototype=jt.prototype;Gi.copy=function(){var e,t,a=new jt(this._x,this._y,this._x0,this._y0,this._x1,this._y1),n=this._root;if(!n)return a;if(!n.length)return a._root=Zt(n),a;for(e=[{source:n,target:a._root=new Array(4)}];n=e.pop();)for(var r=0;r<4;++r)(t=n.source[r])&&(t.length?e.push({source:t,target:n.target[r]=new Array(4)}):n.target[r]=Zt(t));return a},Gi.add=Li,Gi.addAll=Xt,Gi.cover=Ri,Gi.data=Bi,Gi.extent=Xi,Gi.find=Oi,Gi.remove=Wi,Gi.removeAll=qt,Gi.root=zi,Gi.size=ji,Gi.visit=Zi,Gi.visitAfter=$i,Gi.x=Vi,Gi.y=Ji;var Ki,Qi=function(e,t){if((a=(e=t?e.toExponential(t-1):e.toExponential()).indexOf("e"))<0)return null;var a,n=e.slice(0,a);return[n.length>1?n[0]+n.slice(2):n,+e.slice(a+1)]},el=function(e){return e=Qi(Math.abs(e)),e?e[1]:NaN},tl=function(e,t){return function(a,n){for(var r=a.length,o=[],i=0,l=e[0],u=0;r>0&&l>0&&(u+l+1>n&&(l=Math.max(1,n-u)),o.push(a.substring(r-=l,r+l)),!((u+=l+1)>n));)l=e[i=(i+1)%e.length];return o.reverse().join(t)}},al=function(e){return function(t){return t.replace(/[0-9]/g,function(t){return e[+t]})}},nl=function(e,t){e=e.toPrecision(t);e:for(var a,n=e.length,r=1,o=-1;r<n;++r)switch(e[r]){case".":o=a=r;break;case"0":0===o&&(o=r),a=r;break;case"e":break e;default:o>0&&(o=0)}return o>0?e.slice(0,o)+e.slice(a+1):e},rl=function(e,t){var a=Qi(e,t);if(!a)return e+"";var n=a[0],r=a[1],o=r-(Ki=3*Math.max(-8,Math.min(8,Math.floor(r/3))))+1,i=n.length;return o===i?n:o>i?n+new Array(o-i+1).join("0"):o>0?n.slice(0,o)+"."+n.slice(o):"0."+new Array(1-o).join("0")+Qi(e,Math.max(0,t+o-1))[0]},ol=function(e,t){var a=Qi(e,t);if(!a)return e+"";var n=a[0],r=a[1];return r<0?"0."+new Array(-r).join("0")+n:n.length>r+1?n.slice(0,r+1)+"."+n.slice(r+1):n+new Array(r-n.length+2).join("0")},il={"":nl,"%":function(e,t){return(100*e).toFixed(t)},b:function(e){return Math.round(e).toString(2)},c:function(e){return e+""},d:function(e){return Math.round(e).toString(10)},e:function(e,t){return e.toExponential(t)},f:function(e,t){return e.toFixed(t)},g:function(e,t){return e.toPrecision(t)},o:function(e){return Math.round(e).toString(8)},p:function(e,t){return ol(100*e,t)},r:ol,s:rl,X:function(e){return Math.round(e).toString(16).toUpperCase()},x:function(e){return Math.round(e).toString(16)}},ll=/^(?:(.)?([<>=^]))?([+\-\( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?([a-z%])?$/i;$t.prototype=Vt.prototype,Vt.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+this.type};var ul,cl,fl,sl=function(e){return e},dl=["y","z","a","f","p","n","Âµ","m","","k","M","G","T","P","E","Z","Y"],hl=function(e){function t(e){function t(e){var t,r,l,f=b,g=y;if("c"===m)g=v(e)+g,e="";else{e=+e;var _=e<0;if(e=v(Math.abs(e),p),_&&0==+e&&(_=!1),f=(_?"("===c?c:"-":"-"===c||"("===c?"":c)+f,g=g+("s"===m?dl[8+Ki/3]:"")+(_&&"("===c?")":""),x)for(t=-1,r=e.length;++t<r;)if(48>(l=e.charCodeAt(t))||l>57){g=(46===l?o+e.slice(t+1):e.slice(t))+g,e=e.slice(0,t);break}}h&&!s&&(e=n(e,1/0));var w=f.length+e.length+g.length,M=w<d?new Array(d-w+1).join(a):"";switch(h&&s&&(e=n(M+e,M.length?d-g.length:1/0),M=""),u){case"<":e=f+e+g+M;break;case"=":e=f+M+e+g;break;case"^":e=M.slice(0,w=M.length>>1)+f+e+g+M.slice(w);break;default:e=M+f+e+g}return i(e)}e=$t(e);var a=e.fill,u=e.align,c=e.sign,f=e.symbol,s=e.zero,d=e.width,h=e.comma,p=e.precision,m=e.type,b="$"===f?r[0]:"#"===f&&/[boxX]/.test(m)?"0"+m.toLowerCase():"",y="$"===f?r[1]:/[%p]/.test(m)?l:"",v=il[m],x=!m||/[defgprs%]/.test(m);return p=null==p?m?6:12:/[gprs]/.test(m)?Math.max(1,Math.min(21,p)):Math.max(0,Math.min(20,p)),t.toString=function(){return e+""},t}function a(e,a){var n=t((e=$t(e),e.type="f",e)),r=3*Math.max(-8,Math.min(8,Math.floor(el(a)/3))),o=Math.pow(10,-r),i=dl[8+r/3];return function(e){return n(o*e)+i}}var n=e.grouping&&e.thousands?tl(e.grouping,e.thousands):sl,r=e.currency,o=e.decimal,i=e.numerals?al(e.numerals):sl,l=e.percent||"%";return{format:t,formatPrefix:a}};!function(e){ul=hl(e),cl=ul.format,fl=ul.formatPrefix}({decimal:".",thousands:",",grouping:[3],currency:["$",""]});var pl=function(){return new Jt};Jt.prototype={constructor:Jt,reset:function(){this.s=this.t=0},add:function(e){Gt(ml,e,this.t),Gt(this,ml.s,this.s),this.s?this.t+=ml.t:this.s=ml.t},valueOf:function(){return this.s}};var ml=new Jt,bl=Math.PI,yl=bl/2,vl=bl/180,xl=(Math.abs,Math.atan,Math.atan2),gl=Math.cos,_l=Math.sin,wl=Math.sqrt;pl(),pl(),pl(),pl(),pl(),pl(),pl(),pl();gl(30*vl);ea(function(e){return wl(2/(1+e))}).invert=ta(function(e){return 2*Qt(e/2)}),ea(function(e){return(e=Kt(e))&&e/_l(e)}).invert=ta(function(e){return e});var Ml=function(){return this.eachAfter(aa)},Sl=function(e){var t,a,n,r,o=this,i=[o];do{for(t=i.reverse(),i=[];o=t.pop();)if(e(o),a=o.children)for(n=0,r=a.length;n<r;++n)i.push(a[n])}while(i.length);return this},Tl=function(e){for(var t,a,n=this,r=[n];n=r.pop();)if(e(n),t=n.children)for(a=t.length-1;a>=0;--a)r.push(t[a]);return this},kl=function(e){for(var t,a,n,r=this,o=[r],i=[];r=o.pop();)if(i.push(r),t=r.children)for(a=0,n=t.length;a<n;++a)o.push(t[a]);for(;r=i.pop();)e(r);return this},Al=function(e){return this.eachAfter(function(t){for(var a=+e(t.data)||0,n=t.children,r=n&&n.length;--r>=0;)a+=n[r].value;t.value=a})},Cl=function(e){return this.eachBefore(function(t){t.children&&t.children.sort(e)})},Yl=function(e){for(var t=this,a=na(t,e),n=[t];t!==a;)t=t.parent,n.push(t);for(var r=n.length;e!==a;)n.splice(r,0,e),e=e.parent;return n},Nl=function(){for(var e=this,t=[e];e=e.parent;)t.push(e);return t},Fl=function(){var e=[];return this.each(function(t){e.push(t)}),e},Dl=function(){var e=[];return this.eachBefore(function(t){t.children||e.push(t)}),e},El=function(){var e=this,t=[];return e.each(function(a){a!==e&&t.push({source:a.parent,target:a})}),t};ca.prototype=ra.prototype={constructor:ca,count:Ml,each:Sl,eachAfter:kl,eachBefore:Tl,sum:Al,sort:Cl,path:Yl,ancestors:Nl,descendants:Fl,leaves:Dl,links:El,copy:oa};fa.prototype=Object.create(ca.prototype);var Pl={},Hl=function(e,t){function a(e){var t,a=f.status;if(!a&&ya(f)||a>=200&&a<300||304===a){if(i)try{t=i.call(r,f)}catch(e){return void u.call("error",r,e)}else t=f;u.call("load",r,t)}else u.call("error",r,e)}var r,o,i,l,u=n("beforesend","progress","load","error"),c=Pt(),f=new XMLHttpRequest,s=null,d=null,h=0;if("undefined"==typeof XDomainRequest||"withCredentials"in f||!/^(http(s)?:)?\/\//.test(e)||(f=new XDomainRequest),"onload"in f?f.onload=f.onerror=f.ontimeout=a:f.onreadystatechange=function(e){f.readyState>3&&a(e)},f.onprogress=function(e){u.call("progress",r,e)},r={header:function(e,t){return e=(e+"").toLowerCase(),arguments.length<2?c.get(e):(null==t?c.remove(e):c.set(e,t+""),r)},mimeType:function(e){return arguments.length?(o=null==e?null:e+"",r):o},responseType:function(e){return arguments.length?(l=e,r):l},timeout:function(e){return arguments.length?(h=+e,r):h},user:function(e){return arguments.length<1?s:(s=null==e?null:e+"",r)},password:function(e){return arguments.length<1?d:(d=null==e?null:e+"",r)},response:function(e){return i=e,r},get:function(e,t){return r.send("GET",e,t)},post:function(e,t){return r.send("POST",e,t)},send:function(t,a,n){return f.open(t,e,!0,s,d),null==o||c.has("accept")||c.set("accept",o+",*/*"),f.setRequestHeader&&c.each(function(e,t){f.setRequestHeader(t,e)}),null!=o&&f.overrideMimeType&&f.overrideMimeType(o),null!=l&&(f.responseType=l),h>0&&(f.timeout=h),null==n&&"function"==typeof a&&(n=a,a=null),null!=n&&1===n.length&&(n=ba(n)),null!=n&&r.on("error",n).on("load",function(e){n(null,e)}),u.call("beforesend",r,f),f.send(null==a?null:a),r},abort:function(){return f.abort(),r},on:function(){var e=u.on.apply(u,arguments);return e===u?r:e}},null!=t){if("function"!=typeof t)throw new Error("invalid callback: "+t);return r.get(t)}return r},Ul=function(e,t){return function(a,n){var r=Hl(a).mimeType(e).response(t);if(null!=n){if("function"!=typeof n)throw new Error("invalid callback: "+n);return r.get(n)}return r}};Ul("text/html",function(e){return document.createRange().createContextualFragment(e.responseText)}),Ul("application/json",function(e){return JSON.parse(e.responseText)}),Ul("text/plain",function(e){return e.responseText}),Ul("application/xml",function(e){var t=e.responseXML;if(!t)throw new Error("parse error");return t});var Il=function(e,t){return function(a,n,r){arguments.length<3&&(r=n,n=null);var o=Hl(a).mimeType(e);return o.row=function(e){return arguments.length?o.response(va(t,n=e)):n},o.row(n),r?o.get(r):o}};Il("text/csv",Hi),Il("text/tab-separated-values",Ii);var Ll=Array.prototype,Rl=(Ll.map,Ll.slice,new Date),Bl=new Date,Xl=xa(function(){},function(e,t){e.setTime(+e+t)},function(e,t){return t-e});Xl.every=function(e){return e=Math.floor(e),isFinite(e)&&e>0?e>1?xa(function(t){t.setTime(Math.floor(t/e)*e)},function(t,a){t.setTime(+t+a*e)},function(t,a){return(a-t)/e}):Xl:null};var ql=6e4,Ol=6048e5,Wl=(xa(function(e){e.setTime(1e3*Math.floor(e/1e3))},function(e,t){e.setTime(+e+1e3*t)},function(e,t){return(t-e)/1e3},function(e){return e.getUTCSeconds()}),xa(function(e){e.setTime(Math.floor(e/ql)*ql)},function(e,t){e.setTime(+e+t*ql)},function(e,t){return(t-e)/ql},function(e){return e.getMinutes()}),xa(function(e){var t=e.getTimezoneOffset()*ql%36e5;t<0&&(t+=36e5),e.setTime(36e5*Math.floor((+e-t)/36e5)+t)},function(e,t){e.setTime(+e+36e5*t)},function(e,t){return(t-e)/36e5},function(e){return e.getHours()}),xa(function(e){e.setHours(0,0,0,0)},function(e,t){e.setDate(e.getDate()+t)},function(e,t){return(t-e-(t.getTimezoneOffset()-e.getTimezoneOffset())*ql)/864e5},function(e){return e.getDate()-1})),zl=ga(0),jl=ga(1),Zl=(ga(2),ga(3),ga(4),ga(5),ga(6),xa(function(e){e.setDate(1),e.setHours(0,0,0,0)},function(e,t){e.setMonth(e.getMonth()+t)},function(e,t){return t.getMonth()-e.getMonth()+12*(t.getFullYear()-e.getFullYear())},function(e){return e.getMonth()}),xa(function(e){e.setMonth(0,1),e.setHours(0,0,0,0)},function(e,t){e.setFullYear(e.getFullYear()+t)},function(e,t){return t.getFullYear()-e.getFullYear()},function(e){return e.getFullYear()}));Zl.every=function(e){return isFinite(e=Math.floor(e))&&e>0?xa(function(t){t.setFullYear(Math.floor(t.getFullYear()/e)*e),t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,a){t.setFullYear(t.getFullYear()+a*e)}):null};var $l=(xa(function(e){e.setUTCSeconds(0,0)},function(e,t){e.setTime(+e+t*ql)},function(e,t){return(t-e)/ql},function(e){return e.getUTCMinutes()}),xa(function(e){e.setUTCMinutes(0,0,0)},function(e,t){e.setTime(+e+36e5*t)},function(e,t){return(t-e)/36e5},function(e){return e.getUTCHours()}),xa(function(e){e.setUTCHours(0,0,0,0)},function(e,t){e.setUTCDate(e.getUTCDate()+t)},function(e,t){return(t-e)/864e5},function(e){return e.getUTCDate()-1})),Vl=_a(0),Jl=_a(1),Gl=(_a(2),_a(3),_a(4),_a(5),_a(6),xa(function(e){e.setUTCDate(1),e.setUTCHours(0,0,0,0)},function(e,t){e.setUTCMonth(e.getUTCMonth()+t)},function(e,t){return t.getUTCMonth()-e.getUTCMonth()+12*(t.getUTCFullYear()-e.getUTCFullYear())},function(e){return e.getUTCMonth()}),xa(function(e){e.setUTCMonth(0,1),e.setUTCHours(0,0,0,0)},function(e,t){e.setUTCFullYear(e.getUTCFullYear()+t)},function(e,t){return t.getUTCFullYear()-e.getUTCFullYear()},function(e){return e.getUTCFullYear()}));Gl.every=function(e){return isFinite(e=Math.floor(e))&&e>0?xa(function(t){t.setUTCFullYear(Math.floor(t.getUTCFullYear()/e)*e),t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,a){t.setUTCFullYear(t.getUTCFullYear()+a*e)}):null};var Kl,Ql,eu,tu,au,nu={"-":"",_:" ",0:"0"},ru=/^\s*\d+/,ou=/^%/,iu=/[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;!function(e){Kl=Ta(e),Ql=Kl.format,eu=Kl.parse,tu=Kl.utcFormat,au=Kl.utcParse}({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});var lu=(Date.prototype.toISOString||tu("%Y-%m-%dT%H:%M:%S.%LZ"),+new Date("2000-01-01T00:00:00.000Z")||au("%Y-%m-%dT%H:%M:%S.%LZ"),function(e){return e.match(/.{6}/g).map(function(e){return"#"+e})});lu("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),lu("393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6"),lu("3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9"),lu("1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5"),Ho(ke(300,.5,0),ke(-240,.5,1));Ho(ke(-100,.75,.35),ke(80,1.5,.8)),Ho(ke(260,.75,.35),ke(80,1.5,.8)),ke();wn.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,t){switch(e=+e,t=+t,this._point){case 0:this._point=1,this._line?this._context.lineTo(e,t):this._context.moveTo(e,t);break;case 1:this._point=2;default:this._context.lineTo(e,t)}}};An.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:kn(this,this._t0,Tn(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,t){var a=NaN;if(e=+e,t=+t,e!==this._x1||t!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(e,t):this._context.moveTo(e,t);break;case 1:this._point=2;break;case 2:this._point=3,kn(this,Tn(this,a=Sn(this,e,t)),a);break;default:kn(this,this._t0,a=Sn(this,e,t))}this._x0=this._x1,this._x1=e,this._y0=this._y1,this._y1=t,this._t0=a}}},(Cn.prototype=Object.create(An.prototype)).point=function(e,t){An.prototype.point.call(this,t,e)},Yn.prototype={moveTo:function(e,t){this._context.moveTo(t,e)},closePath:function(){this._context.closePath()},lineTo:function(e,t){this._context.lineTo(t,e)},bezierCurveTo:function(e,t,a,n,r,o){this._context.bezierCurveTo(t,e,n,a,o,r)}};var uu=function(e){for(var t=e.length/6|0,a=new Array(t),n=0;n<t;)a[n]="#"+e.slice(6*n,6*++n);return a};uu("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"),uu("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"),uu("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"),uu("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"),uu("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"),uu("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"),uu("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"),uu("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f");var cu=function(e){return vo(e[e.length-1])};cu(new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(uu)),cu(new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(uu)),cu(new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(uu)),cu(new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(uu)),cu(new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(uu)),cu(new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(uu)),cu(new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(uu)),cu(new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(uu)),cu(new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(uu)),cu(new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(uu)),cu(new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(uu)),cu(new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(uu)),cu(new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(uu)),cu(new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(uu)),cu(new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(uu)),cu(new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(uu)),cu(new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(uu)),cu(new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(uu)),cu(new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(uu)),cu(new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(uu)),cu(new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(uu)),cu(new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(uu)),cu(new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(uu)),cu(new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(uu)),cu(new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(uu)),cu(new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(uu)),cu(new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(uu));var fu=(new Array(1).concat([["#cccccc"],["#e3e3e3","#696969"],["#e3e3e3","#a4a4a4","#696969"],["#e3e3e3","#b9b9b9","#8f8f8f","#696969"],["#e3e3e3","#c2c2c2","#a4a4a4","#858585","#696969"],["#e3e3e3","#cacaca","#b0b0b0","#979797","#808080","#696969"],["#e3e3e3","#cecece","#b9b9b9","#a4a4a4","#8f8f8f","#7c7c7c","#696969"],["#e3e3e3","#d0d0d0","#bebebe","#adadad","#9b9b9b","#8a8a8a","#797979","#696969"],["#e3e3e3","#d3d3d3","#c2c2c2","#b3b3b3","#a4a4a4","#949494","#858585","#787878","#696969"]]),new Array(3).concat([["#ddd4e8","#866aba","#00008b"],["#ddd4e8","#a38cca","#6648ab","#00008b"],["#ddd4e8","#b29ed1","#866aba","#5537a3","#00008b"],["#ddd4e8","#bba8d6","#977ec4","#7356b1","#4a2d9e","#00008b"],["#ddd4e8","#c0b0d9","#a38cca","#866aba","#6648ab","#42279b","#00008b"],["#ddd4e8","#c4b5db","#ac96ce","#9378c1","#785bb4","#5c3fa6","#3c2299","#00008b"],["#ddd4e8","#c8b8dd","#b29ed1","#9c84c6","#866aba","#6e51af","#5537a3","#381e97","#00008b"]]),new Array(3).concat([["#ffff00","#d98300","#8b0000"],["#ffff00","#edaa00","#c15f01","#8b0000"],["#ffff00","#f5be00","#d98300","#b44c02","#8b0000"],["#ffff00","#f9ca00","#e59b00","#cb6c01","#ac4002","#8b0000"],["#ffff00","#fbd300","#edaa00","#d98300","#c15f01","#a73802","#8b0000"],["#ffff00","#fdda00","#f2b600","#e29400","#cf7401","#ba5401","#a33102","#8b0000"],["#ffff00","#fdde00","#f5be00","#e8a100","#d98300","#c76801","#b44c02","#a02e02","#8b0000"]]),new Array(3).concat([["#006400","#ff8c00","#8b0000"],["#006400","#a48b00","#ee4d00","#8b0000"],["#006400","#798500","#ff8c00","#db3301","#8b0000"],["#006400","#618100","#c98d00","#f96600","#cd2401","#8b0000"],["#006400","#4f7c00","#a48b00","#ff8c00","#ee4d00","#c31c02","#8b0000"],["#006400","#437a00","#8b8800","#d78e00","#fc6f00","#e33e00","#bb1502","#8b0000"],["#006400","#3b7800","#798500","#b98d00","#ff8c00","#f55c00","#db3301","#b61102","#8b0000"]]),yo("#d3d3d3","#2a2a2a"),yo("#add8e6","#222b2e"),yo("#0000ff","#ff0000"),{"dgf.dialogLayersLarge":{create:function(e,t,a){return{type:"form",title:"Insert/Edit Diagram",id:"dialog_form",data:Nn(a),bodyType:"tabpanel",autoScroll:!0,onPostRender:function(t){e.postRenderDialog(t,a)},onShowTab:function(e){var t=e.target.rootControl.items().toArray()[0].activeTabId;Pn(a.nodeId+":activeTabId",t,60)},body:[e.create("","dgf.setupForm"),e.create("scheduler_",a.scheduler||"dgf.schedulerUndefined"),e.create("reader_",a.reader||"dgf.readerUndefined"),e.create("template_",a.template||"dgf.containerTemplateUndefined"),e.create("template_layer0_",a.template&&a.template.layer0?a.template.layer0.type:"dgf.templateUndefined"),e.create("template_layer1_",a.template&&a.template.layer1?a.template.layer1.type:"dgf.templateUndefined"),e.create("template_layer2_",a.template&&a.template.layer2?a.template.layer2.type:"dgf.templateUndefined"),e.create("template_layer3_",a.template&&a.template.layer3?a.template.layer3.type:"dgf.templateUndefined"),e.create("template_layer4_",a.template&&a.template.layer4?a.template.layer4.type:"dgf.templateUndefined"),e.create("template_layer5_",a.template&&a.template.layer5?a.template.layer5.type:"dgf.templateUndefined"),e.create("template_layer6_",a.template&&a.template.layer6?a.template.layer6.type:"dgf.templateUndefined"),e.create("style_",a.style||"dgf.styleUndefined")]}}},"dgf.dialogLayersMedium":{create:function(e,t,a){return{type:"form",title:"Insert/Edit Diagram",id:"dialog_form",data:Nn(a),bodyType:"tabpanel",autoScroll:!0,onPostRender:function(t){e.postRenderDialog(t,a)},onShowTab:function(e){var t=e.target.rootControl.items().toArray()[0].activeTabId;Pn(a.nodeId+":activeTabId",t,60)},body:[e.create("","dgf.setupForm"),e.create("scheduler_",a.scheduler||"dgf.schedulerUndefined"),e.create("reader_",a.reader||"dgf.readerUndefined"),{type:"form",title:"Template",defaults:{},items:[e.create("template_","dgf.fieldsetSizeMargin"),e.create("template_","dgf.fieldsetData"),e.create("template_","dgf.fieldsetScales"),e.create("template_","dgf.fieldsetTransitions")]},e.create("style_",a.style||"dgf.styleUndefined")]}}},"dgf.dialogLayersSmall":{create:function(e,t,a){return{type:"form",title:"Insert/Edit Diagram",id:"dialog_form",data:Nn(a),bodyType:"tabpanel",autoScroll:!0,
onPostRender:function(t){e.postRenderDialog(t,a)},onShowTab:function(e){var t=e.target.rootControl.items().toArray()[0].activeTabId;Pn(a.nodeId+":activeTabId",t,60)},body:[e.create("","dgf.setupForm"),e.create("reader_",a.reader||"dgf.readerUndefined"),{type:"form",title:"Template",defaults:{},items:[e.create("template_","dgf.fieldsetSizeMargin"),e.create("template_","dgf.fieldsetData"),e.create("template_","dgf.fieldsetScalesSmall")]},e.create("style_",a.style||"dgf.styleUndefined")]}}}}),su={"dgf.templateLayers":{create:function(e,t){return{type:"form",title:"Template",defaults:{},items:[e.create(t,"dgf.listboxContainerTemplateType"),e.create(t,"dgf.fieldsetSizeMargin"),e.create(t,"dgf.fieldsetData"),e.create(t,"dgf.fieldsetScales"),e.create(t,"dgf.fieldsetTransitions")]}}}},du={"dgf.listboxSchedulerType":{create:function(e,t){return{type:"listbox",name:t+"type",label:"type",values:[{text:"n/a",value:"dgf.schedulerUndefined"}].concat(e.typesByCategory(["scheduler"])),maxWidth:250,tooltip:"Type of the scheduler.",onSelect:function(a){e.changeType(t,a.target.value(),a.target)}}}},"dgf.listboxReaderType":{create:function(e,t){return{type:"listbox",name:t+"type",label:"type",values:[{text:"n/a",value:"dgf.readerUndefined"}].concat(e.typesByCategory(["reader"])),maxWidth:250,tooltip:"Type of the reader.",onSelect:function(a){e.changeType(t,a.target.value(),a.target);var n=a.control.getRoot();e.setMenu(n,Fn(n.toJSON()))}}}},"dgf.listboxContainerTemplateType":{create:function(e,t){return{type:"listbox",name:t+"type",label:"type",values:[{text:"n/a",value:"dgf.containerTemplateUndefined"}].concat(e.typesByCategory(["template","container"])),maxWidth:250,tooltip:"Type of the container template.",onSelect:function(a){e.changeType(t,a.target.value(),a.target)}}}},"dgf.listboxTemplateType":{create:function(e,t){return{type:"listbox",name:t+"type",label:"type",values:[{text:"n/a",value:"dgf.templateUndefined"}].concat(e.typesByCategory(["template"])),maxWidth:250,tooltip:"Type of the layer template.",onSelect:function(a){e.changeType(t,a.target.value(),a.target)}}}},"dgf.listboxStyleType":{create:function(e,t){return{type:"listbox",name:t+"type",label:"type",values:[{text:"n/a",value:"dgf.styleUndefined"}].concat(e.typesByCategory(["style"])),maxWidth:250,tooltip:"Type of the stylesheet.",onSelect:function(a){e.changeType(t,a.target.value(),a.target)}}}},"dgf.valuesNumberFormat":{create:function(){var e=[];return e.push({text:"fixed",menu:[0,1,2,3,4,8].map(function(e){return{text:e+" digit"+(1!=e?"s":""),value:"format(,."+e+"f)"}})}),e.push({text:"rounded",menu:[0,1,2,3,4,8].map(function(e){return{text:e+" digit"+(1!=e?"s":""),value:"format(,."+e+"r)"}})}),e.push({text:"percent %",menu:[0,1,2,3,4,8].map(function(e){return{text:e+" digit"+(1!=e?"s":""),value:"format(,."+e+"%)"}})}),e.push({text:"si-prefix",menu:[0,1,2,3,4,8].map(function(e){return{text:e+" digit"+(1!=e?"s":""),value:"format(,."+e+"s)"}})}),e.push({text:"exponent",menu:[0,1,2,3,4,8].map(function(e){return{text:e+" digit"+(1!=e?"s":""),value:"format(,."+e+"e)"}})}),e.push({text:"hexadeximal",menu:[{text:"upper case",value:"#format(X)"},{text:"lower case",value:"format(x)"}]}),e.push({text:"currency $ (rounded)",menu:[0,1,2,4].map(function(e){return{text:e+" digit"+(1!=e?"s":""),value:"format($,."+e+"r)"}})}),e}},"dgf.valuesTimeFormat":{create:function(){var e=new Date;return[{text:"date",menu:[{text:"Y-m-d - "+Ql("%Y-%m-%d")(e),value:"timeFormat(%Y-%m-%d)"},{text:"m/d/Y - "+Ql("%x")(e),value:"timeFormat(%x)"},{text:"Y/m/d - "+Ql("%Y/%m/%d")(e),value:"timeFormat(%Y/%m/%d)"},{text:"d.m.Y - "+Ql("%d.%m.%Y")(e),value:"timeFormat(%d.%m.%Y)"},{text:"Ymd - "+Ql("%Y%m%d")(e),value:"timeFormat(%Y%m%d)"},{text:"a, d. b y - "+Ql("%a, %d. %b %y")(e),value:"timeFormat(%a, %d. %b %y)"},{text:"A, d. B Y - "+Ql("%A, %d. %B %Y")(e),value:"timeFormat(%A, %d. %B %Y)"},{text:"y/m - "+Ql("%y/%m")(e),value:"timeFormat(%y/%m)"},{text:"y-m - "+Ql("%y-%m")(e),value:"timeFormat(%y-%m)"},{text:"m.y - "+Ql("%m.%y")(e),value:"timeFormat(%m.%y)"},{text:"b y - "+Ql("%b %y")(e),value:"timeFormat(%b %y)"},{text:"B Y - "+Ql("%B %Y")(e),value:"timeFormat(%B %Y)"},{text:"Y  - "+Ql("%Y")(e),value:"timeFormat(%Y)"}]},{text:"date/time",menu:[{text:"Y-m-d H:M:S - "+Ql("%Y-%m-%d %X")(e),value:"timeFormat(%Y-%m-%d %X)"},{text:"m/d/Y H:M:S - "+Ql("%x %X")(e),value:"timeFormat(%x %X)"},{text:"Y/m/d H:M:S - "+Ql("%Y/%m/%d %X")(e),value:"timeFormat(%Y/%m/%d %X)"},{text:"d.m.Y H:M:S - "+Ql("%d.%m.%Y %X")(e),value:"timeFormat(%d.%m.%Y %X)"},{text:"a, d. b y H:M:S - "+Ql("%a, %d. %b %y %X")(e),value:"timeFormat(%a, %d. %b %y %X)"},{text:"A, d. B Y H:M:S - "+Ql("%A, %d. %B %Y %X")(e),value:"timeFormat(%A, %d. %B %Y %X)"},{text:"YmdHMS - "+Ql("%Y%m%d%H%M%S")(e),value:"timeFormat(%Y%m%d%H%M%S)"}]},{text:"time",menu:[{text:"H:M:S - "+Ql("%X")(e),value:"timeFormat(%X)"},{text:"H:M - "+Ql("%H:%M")(e),value:"timeFormat(%H:%M)"},{text:"I:M:S p - "+Ql("%I:%M:%S %p")(e),value:"timeFormat(%I:%M:%S %p)"},{text:"I:M p - "+Ql("%I:%M %p")(e),value:"timeFormat(%I:%M %p)"},{text:"H:M:S UTC Z - "+Ql("%X UTC%Z")(e),value:"timeFormat(%X UTC%Z)"},{text:"H:M:S.ms - "+Ql("%H:%M:%S.%L")(e),value:"timeFormat(%H:%M:%S.%L)"}]},{text:"utc",menu:[{text:"Y-m-d (utc) - "+tu("%Y-%m-%d")(e),value:"utcFormat(%Y-%m-%d)"},{text:"m/d/Y (utc) - "+tu("%x")(e),value:"utcFormat(%x)"},{text:"Y/m/d (utc) - "+tu("%Y/%m/%d")(e),value:"utcFormat(%Y/%m/%d)"},{text:"d.m.Y (utc) - "+tu("%d.%m.%Y")(e),value:"utcFormat(%d.%m.%Y)"},{text:"Ymd (utc) - "+tu("%Y%m%d")(e),value:"utcFormat(%Y%m%d)"},{text:"iso (utc) - "+tu("%Y-%m-%dT%H:%M:%S.%LZ")(e),value:"utcFormat(%Y-%m-%dT%H:%M:%S.%LZ)"},{text:"Y-m-d H:M:S (utc) - "+tu("%Y-%m-%d %X")(e),value:"utcFormat(%Y-%m-%d %X)"},{text:"m/d/Y H:M:S (utc) - "+tu("%x %X")(e),value:"utcFormat(%x %X)"},{text:"Y/m/d H:M:S (utc) - "+tu("%Y/%m/%d %X")(e),value:"utcFormat(%Y/%m/%d %X)"},{text:"d.m.Y H:M:S (utc) - "+tu("%d.%m.%Y %X")(e),value:"utcFormat(%d.%m.%Y %X)"},{text:"H:M:S (utc) - "+tu("%X")(e),value:"utcFormat(%X)"},{text:"H:M (utc) - "+tu("%H:%M")(e),value:"utcFormat(%H:%M)"},{text:"I:M:S p (utc) - "+tu("%I:%M:%S %p")(e),value:"utcFormat(%I:%M:%S %p)"},{text:"I:M p (utc) - "+tu("%I:%M %p")(e),value:"utcFormat(%I:%M %p)"},{text:"H:M:S UTC Z (utc) - "+tu("%X UTC%Z")(e),value:"utcFormat(%X UTC%Z)"},{text:"H:M:S.ms (utc) - "+tu("%H:%M:%S.%L")(e),value:"utcFormat(%H:%M:%S.%L)"}]}]}},"dgf.valuesNumberParse":{create:function(){return[{text:"Number",value:"numberParse()"},{text:"Percent %",value:"numberParse(%)"},{text:"Kilo",value:"numberParse(K)"},{text:"Million",value:"numberParse(M)"},{text:"Billion",value:"numberParse(B)"}]}},"dgf.valuesTimeParse":{create:function(){var e=new Date;return[{text:"date",menu:[{text:"Y-m-d - "+Ql("%Y-%m-%d")(e),value:"timeParse(%Y-%m-%d)"},{text:"m/d/Y - "+Ql("%x")(e),value:"timeParse(%x)"},{text:"Y/m/d - "+Ql("%Y/%m/%d")(e),value:"timeParse(%Y/%m/%d)"},{text:"d.m.Y - "+Ql("%d.%m.%Y")(e),value:"timeParse(%d.%m.%Y)"},{text:"Ymd - "+Ql("%Y%m%d")(e),value:"timeParse(%Y%m%d)"},{text:"a, d. b y - "+Ql("%a, %d. %b %y")(e),value:"timeParse(%a, %d. %b %y)"},{text:"A, d. B Y - "+Ql("%A, %d. %B %Y")(e),value:"timeParse(%A, %d. %B %Y)"},{text:"y/m - "+Ql("%y/%m")(e),value:"timeParse(%y/%m)"},{text:"y-m - "+Ql("%y-%m")(e),value:"timeParse(%y-%m)"},{text:"m.y - "+Ql("%m.%y")(e),value:"timeParse(%m.%y)"},{text:"b y - "+Ql("%b %y")(e),value:"timeParse(%b %y)"},{text:"B Y - "+Ql("%B %Y")(e),value:"timeParse(%B %Y)"},{text:"Y  - "+Ql("%Y")(e),value:"timeParse(%Y)"}]},{text:"date/time",menu:[{text:"Y-m-d H:M:S - "+Ql("%Y-%m-%d %X")(e),value:"timeParse(%Y-%m-%d %X)"},{text:"m/d/Y H:M:S - "+Ql("%x %X")(e),value:"timeParse(%x %X)"},{text:"Y/m/d H:M:S - "+Ql("%Y/%m/%d %X")(e),value:"timeParse(%Y/%m/%d %X)"},{text:"d.m.Y H:M:S - "+Ql("%d.%m.%Y %X")(e),value:"timeParse(%d.%m.%Y %X)"},{text:"a, d. b y H:M:S - "+Ql("%a, %d. %b %y %X")(e),value:"timeParse(%a, %d. %b %y %X)"},{text:"A, d. B Y H:M:S - "+Ql("%A, %d. %B %Y %X")(e),value:"timeParse(%A, %d. %B %Y %X)"},{text:"YmdHMS - "+Ql("%Y%m%d%H%M%S")(e),value:"timeParse(%Y%m%d%H%M%S)"}]},{text:"time",menu:[{text:"H:M:S - "+Ql("%X")(e),value:"timeParse(%X)"},{text:"H:M - "+Ql("%H:%M")(e),value:"timeParse(%H:%M)"},{text:"I:M:S p - "+Ql("%I:%M:%S %p")(e),value:"timeParse(%I:%M:%S %p)"},{text:"I:M p - "+Ql("%I:%M %p")(e),value:"timeParse(%I:%M %p)"},{text:"H:M:S UTC Z - "+Ql("%X UTC%Z")(e),value:"timeParse(%X UTC%Z)"},{text:"H:M:S.ms - "+Ql("%H:%M:%S.%L")(e),value:"timeParse(%H:%M:%S.%L)"}]},{text:"utc",menu:[{text:"Y-m-d (utc) - "+tu("%Y-%m-%d")(e),value:"utcFormat(%Y-%m-%d)"},{text:"m/d/Y (utc) - "+tu("%x")(e),value:"utcFormat(%x)"},{text:"Y/m/d (utc) - "+tu("%Y/%m/%d")(e),value:"utcFormat(%Y/%m/%d)"},{text:"d.m.Y (utc) - "+tu("%d.%m.%Y")(e),value:"utcFormat(%d.%m.%Y)"},{text:"Ymd (utc) - "+tu("%Y%m%d")(e),value:"utcFormat(%Y%m%d)"},{text:"iso (utc) - "+tu("%Y-%m-%dT%H:%M:%S.%LZ")(e),value:"utcFormat(%Y-%m-%dT%H:%M:%S.%LZ)"},{text:"Y-m-d H:M:S (utc) - "+tu("%Y-%m-%d %X")(e),value:"utcFormat(%Y-%m-%d %X)"},{text:"m/d/Y H:M:S (utc) - "+tu("%x %X")(e),value:"utcFormat(%x %X)"},{text:"Y/m/d H:M:S (utc) - "+tu("%Y/%m/%d %X")(e),value:"utcFormat(%Y/%m/%d %X)"},{text:"d.m.Y H:M:S (utc) - "+tu("%d.%m.%Y %X")(e),value:"utcFormat(%d.%m.%Y %X)"},{text:"H:M:S (utc) - "+tu("%X")(e),value:"utcFormat(%X)"},{text:"H:M (utc) - "+tu("%H:%M")(e),value:"utcFormat(%H:%M)"},{text:"I:M:S p (utc) - "+tu("%I:%M:%S %p")(e),value:"utcFormat(%I:%M:%S %p)"},{text:"I:M p (utc) - "+tu("%I:%M %p")(e),value:"utcFormat(%I:%M %p)"},{text:"H:M:S UTC Z (utc) - "+tu("%X UTC%Z")(e),value:"utcFormat(%X UTC%Z)"},{text:"H:M:S.ms (utc) - "+tu("%H:%M:%S.%L")(e),value:"utcFormat(%H:%M:%S.%L)"}]}]}},"dgf.valuesIntervalMillis":{create:function(){return[{text:"20 seconds",value:2e4},{text:"1 minute",value:6e4},{text:"5 minutes",value:3e5},{text:"20 minutes",value:12e5},{text:"1 hour",value:36e5},{text:"12 hours",value:432e5},{text:"24 hours",value:864e5}]}},"dgf.valuesCSSWidth":{create:function(){return[{text:"100%",value:"100%"},{text:"90%",value:"90%"},{text:"80%",value:"80%"},{text:"60%",value:"60%"},{text:"50%",value:"50%"},{text:"40%",value:"40%"},{text:"30%",value:"30%"},{text:"25%",value:"25%"},{text:"more",menu:[{text:"100% content-box",value:"100% content-box"},{text:"75% content-box",value:"75% content-box"},{text:"50% content-box",value:"50% content-box"},{text:"max-content",value:"max-content"},{text:"min-content",value:"min-content"},{text:"available",value:"available"},{text:"fit-content",value:"fit-content"},{text:"auto",value:"auto"},{text:"inherit",value:"inherit"},{text:"initial",value:"initial"},{text:"unset",value:"unset"}]}]}},"dgf.valuesCSSFloat":{create:function(){return[{text:"none",value:"none"},{text:"left",value:"left"},{text:"right",value:"right"},{text:"inline-start",value:"inline-start"},{text:"inline-end",value:"inline-end"},{text:"inherit",value:"inherit"},{text:"initial",value:"initial"},{text:"unset",value:"unset"}]}},"dgf.valuesCSSClear":{create:function(){return[{text:"none",value:"none"},{text:"left",value:"left"},{text:"right",value:"right"},{text:"both",value:"both"},{text:"inline-start",value:"inline-start"},{text:"inline-end",value:"inline-end"},{text:"inherit",value:"inherit"}]}},"dgf.valuesFontSize":{create:function(){return[{text:"xx-small",value:"xx-small"},{text:"x-small",value:"x-small"},{text:"small",value:"small"},{text:"medium",value:"medium"},{text:"large",value:"large"},{text:"x-large",value:"x-large"},{text:"xx-large",value:"xx-large"},{text:"larger",value:"larger"},{text:"smaller",value:"smaller"}]}},"dgf.valuesPreserveAspectRatioAlign":{create:function(){return[{text:"xMidYMid",value:"xMidYMid"},{text:"xMinYMin",value:"xMinYMin"},{text:"xMidYMin",value:"xMidYMin"},{text:"xMaxYMin",value:"xMaxYMin"},{text:"xMinYMid",value:"xMinYMid"},{text:"xMaxYMid",value:"xMaxYMid"},{text:"xMinYMax",value:"xMinYMax"},{text:"xMidYMax",value:"xMidYMax"},{text:"xMaxYMax",value:"xMaxYMax"},{text:"none",value:"none"}]}},"dgf.valuesPreserveAspectRatioMeetOrSlice":{create:function(){return[{text:"meet",value:"meet"},{text:"slice",value:"slice"}]}},"dgf.valuesRotate":{create:function(){return[{text:"-15",value:"-15"},{text:"-30",value:"-30"},{text:"-45",value:"-45"},{text:"-60",value:"-60"},{text:"-90",value:"-90"}]}},"dgf.valuesTextAnchor":{create:function(){return[{text:"start",value:"start"},{text:"middle",value:"middle"},{text:"end",value:"end"}]}},"dgf.valuesStrokeWidth":{create:function(){return[{text:"xx-small",value:"0.5px"},{text:"x-small",value:"1px"},{text:"small",value:"2px"},{text:"medium",value:"4px"},{text:"large",value:"8px"},{text:"x-large",value:"16px"},{text:"xx-large",value:"32px"}]}},"dgf.valuesStrokeDashArray":{create:function(){return[{text:". . . . .",value:"2,2"},{text:"-------",value:"5,1"},{text:"- - - -",value:"5,5"},{text:"-  -  -  -",value:"5,10"},{text:"-- -- -",value:"15,10,5,10"}]}},"dgf.valuesColorName":{create:function(){return[{text:"a - o",menu:[{text:"aqua",value:"aqua"},{text:"black",value:"black"},{text:"blue",value:"blue"},{text:"fuchsia",value:"fuchsia"},{text:"gray",value:"gray"},{text:"lime",value:"lime"},{text:"maroon",value:"maroon"},{text:"navy",value:"navy"},{text:"olive",value:"olive"},{text:"orange",value:"orange"}]},{text:"p - z",menu:[{text:"purple",value:"purple"},{text:"red",value:"red"},{text:"silver",value:"silver"},{text:"teal",value:"teal"},{text:"transparent",value:"transparent"},{text:"white",value:"white"},{text:"yellow",value:"yellow"}]},{text:"extended",menu:[{text:"aliceblue - chartreuse",menu:[{text:"aliceblue",value:"aliceblue"},{text:"antiquewhite",value:"antiquewhite"},{text:"aquamarine",value:"aquamarine"},{text:"azure",value:"azure"},{text:"beige",value:"beige"},{text:"bisque",value:"bisque"},{text:"blanchedalmond",value:"blanchedalmond"},{text:"blueviolet",value:"blueviolet"},{text:"brown",value:"brown"},{text:"burlywood",value:"burlywood"},{text:"cadetblue",value:"cadetblue"},{text:"chartreuse",value:"chartreuse"}]},{text:"chocolate - darkkhaki",menu:[{text:"chocolate",value:"chocolate"},{text:"coral",value:"coral"},{text:"cornflowerblue",value:"cornflowerblue"},{text:"cornsilk",value:"cornsilk"},{text:"crimson",value:"crimson"},{text:"darkblue",value:"darkblue"},{text:"darkcyan",value:"darkcyan"},{text:"darkgoldenrod",value:"darkgoldenrod"},{text:"darkgray",value:"darkgray"},{text:"darkgreen",value:"darkgreen"},{text:"darkgrey",value:"darkgrey"},{text:"darkkhaki",value:"darkkhaki"}]},{text:"darkmagenta - darkviolet",menu:[{text:"darkmagenta",value:"darkmagenta"},{text:"darkolivegreen",value:"darkolivegreen"},{text:"darkorange",value:"darkorange"},{text:"darkorchid",value:"darkorchid"},{text:"darkred",value:"darkred"},{text:"darksalmon",value:"darksalmon"},{text:"darkseagreen",value:"darkseagreen"},{text:"darkslateblue",value:"darkslateblue"},{text:"darkslategray",value:"darkslategray"},{text:"darkslategrey",value:"darkslategrey"},{text:"darkturquoise",value:"darkturquoise"},{text:"darkviolet",value:"darkviolet"}]},{text:"deeppink - goldenrod",menu:[{text:"deeppink",value:"deeppink"},{text:"deepskyblue",value:"deepskyblue"},{text:"dimgray",value:"dimgray"},{text:"dimgrey",value:"dimgrey"},{text:"dodgerblue",value:"dodgerblue"},{text:"firebrick",value:"firebrick"},{text:"floralwhite",value:"floralwhite"},{text:"forestgreen",value:"forestgreen"},{text:"gainsboro",value:"gainsboro"},{text:"ghostwhite",value:"ghostwhite"},{text:"gold",value:"gold"},{text:"goldenrod",value:"goldenrod"}]},{text:"greenyellow - lemonchiffon",menu:[{text:"greenyellow",value:"greenyellow"},{text:"grey",value:"grey"},{text:"honeydew",value:"honeydew"},{text:"hotpink",value:"hotpink"},{text:"indianred",value:"indianred"},{text:"indigo",value:"indigo"},{text:"ivory",value:"ivory"},{text:"khaki",value:"khaki"},{text:"lavender",value:"lavender"},{text:"lavenderblush",value:"lavenderblush"},{text:"lawngreen",value:"lawngreen"},{text:"lemonchiffon",value:"lemonchiffon"}]},{text:"lightblue - lightslategray",menu:[{text:"lightblue",value:"lightblue"},{text:"lightcoral",value:"lightcoral"},{text:"lightcyan",value:"lightcyan"},{text:"lightgoldenrodyellow",value:"lightgoldenrodyellow"},{text:"lightgray",value:"lightgray"},{text:"lightgreen",value:"lightgreen"},{text:"lightgrey",value:"lightgrey"},{text:"lightpink",value:"lightpink"},{text:"lightsalmon",value:"lightsalmon"},{text:"lightseagreen",value:"lightseagreen"},{text:"lightskyblue",value:"lightskyblue"},{text:"lightslategray",value:"lightslategray"}]},{text:"lightsteelblue - mediumturquoise",menu:[{text:"lightsteelblue",value:"lightsteelblue"},{text:"lightyellow",value:"lightyellow"},{text:"limegreen",value:"limegreen"},{text:"linen",value:"linen"},{text:"mediumaquamarine",value:"mediumaquamarine"},{text:"mediumblue",value:"mediumblue"},{text:"mediumorchid",value:"mediumorchid"},{text:"mediumpurple",value:"mediumpurple"},{text:"mediumseagreen",value:"mediumseagreen"},{text:"mediumslateblue",value:"mediumslateblue"},{text:"mediumspringgreen",value:"mediumspringgreen"},{text:"mediumturquoise",value:"mediumturquoise"}]},{text:"mediumvioletred - palegreen",menu:[{text:"mediumvioletred",value:"mediumvioletred"},{text:"midnightblue",value:"midnightblue"},{text:"mintcream",value:"mintcream"},{text:"mistyrose",value:"mistyrose"},{text:"moccasin",value:"moccasin"},{text:"navajowhite",value:"navajowhite"},{text:"oldlace",value:"oldlace"},{text:"olivedrab",value:"olivedrab"},{text:"orangered",value:"orangered"},{text:"orchid",value:"orchid"},{text:"palegoldenrod",value:"palegoldenrod"},{text:"palegreen",value:"palegreen"}]},{text:"paleturquoise - seagreen",menu:[{text:"paleturquoise",value:"paleturquoise"},{text:"palevioletred",value:"palevioletred"},{text:"papayawhip",value:"papayawhip"},{text:"peachpuff",value:"peachpuff"},{text:"pink",value:"pink"},{text:"plum",value:"plum"},{text:"powderblue",value:"powderblue"},{text:"rosybrown",value:"rosybrown"},{text:"royalblue",value:"royalblue"},{text:"saddlebrown",value:"saddlebrown"},{text:"salmon",value:"salmon"},{text:"sandybrown",value:"sandybrown"},{text:"seagreen",value:"seagreen"}]},{text:"seashell - turquoise",menu:[{text:"seashell",value:"seashell"},{text:"sienna",value:"sienna"},{text:"skyblue",value:"skyblue"},{text:"slateblue",value:"slateblue"},{text:"slategray",value:"slategray"},{text:"snow",value:"snow"},{text:"springgreen",value:"springgreen"},{text:"steelblue",value:"steelblue"},{text:"tan",value:"tan"},{text:"thistle",value:"thistle"},{text:"tomato",value:"tomato"},{text:"turquoise",value:"turquoise"}]},{text:"violet - rebeccapurple",menu:[{text:"violet",value:"violet"},{text:"wheat",value:"wheat"},{text:"whitesmoke",value:"whitesmoke"},{text:"yellowgreen",value:"yellowgreen"},{text:"rebeccapurple",value:"rebeccapurple"}]}]}]}},"dgf.valuesInterpolateCustom":{create:function(){return[{text:"interpolateRgb",value:"interpolateRgb(lightgrey,black,1.0)"},{text:"interpolateHsl",value:"interpolateHsl(lightgrey,black,1.0)"},{text:"interpolateLab",value:"interpolateLab(lightgrey,black)"},{text:"interpolateHcl",value:"interpolateHcl(lightgrey,black)"},{text:"interpolateCubehelix",value:"interpolateCubehelix(lightgrey,black,1.0)"}]}},"dgf.fieldsetParseData":{create:function(e,t){return{type:"fieldset",label:"parse",layout:"grid",columns:2,defaults:{},items:[{type:"label",text:"attribute"},{type:"label",text:"parse"},{type:"combobox",classes:"parsemap",name:t+"parse_rule0_attribute",value:"n/a",values:[{text:"n/a",value:"n/a"}],tooltip:"Attribute of the data. Ex. x / y"},{type:"combobox",name:t+"parse_rule0_parser",value:"n/a",values:[{text:"n/a",value:"n/a"},{text:"number",menu:e.lookup("dgf.valuesNumberParse").create()},{text:"time",menu:e.lookup("dgf.valuesTimeParse").create()}],tooltip:"Parser for the data attribute."},{type:"combobox",classes:"parsemap",name:t+"parse_rule1_attribute",value:"n/a",values:[{text:"n/a",value:"n/a"}],tooltip:"Attribute of the data. Ex. x / y"},{type:"combobox",name:t+"parse_rule1_parser",value:"n/a",values:[{text:"n/a",value:"n/a"},{text:"number",menu:e.lookup("dgf.valuesNumberParse").create()},{text:"time",menu:e.lookup("dgf.valuesTimeParse").create()}],tooltip:"Parser for the data attribute."},{type:"combobox",classes:"parsemap",name:t+"parse_rule2_attribute",value:"n/a",values:[{text:"n/a",value:"n/a"}],tooltip:"Attribute of the data. Ex. x / y"},{type:"combobox",name:t+"parse_rule2_parser",value:"n/a",values:[{text:"n/a",value:"n/a"},{text:"number",menu:e.lookup("dgf.valuesNumberParse").create()},{text:"time",menu:e.lookup("dgf.valuesTimeParse").create()}],tooltip:"Parser for the data attribute."},{type:"combobox",classes:"parsemap",name:t+"parse_rule3_attribute",value:"n/a",values:[{text:"n/a",value:"n/a"}],tooltip:"Attribute of the data. Ex. x / y"},{type:"combobox",name:t+"parse_rule3_parser",value:"n/a",values:[{text:"n/a",value:"n/a"},{text:"number",menu:e.lookup("dgf.valuesNumberParse").create()},{text:"time",menu:e.lookup("dgf.valuesTimeParse").create()}],tooltip:"Parser for the data attribute."},{type:"combobox",classes:"parsemap",name:t+"parse_rule4_attribute",value:"n/a",values:[{text:"n/a",value:"n/a"}],tooltip:"Attribute of the data. Ex. x / y"},{type:"combobox",name:t+"parse_rule4_parser",value:"n/a",values:[{text:"n/a",value:"n/a"},{text:"number",menu:e.lookup("dgf.valuesNumberParse").create()},{text:"time",menu:e.lookup("dgf.valuesTimeParse").create()}],tooltip:"Parser for the data attribute."}]}}},"dgf.fieldsetSizeMargin":{create:function(e,t){return{type:"fieldset",label:"size & margin",layout:"grid",columns:3,defaults:{type:"textbox",subtype:"number",maxWidth:60},items:[{name:t+"width",label:"width",tooltip:"Width of the chart"},{name:t+"height",label:"height",tooltip:"Height of the chart"},{type:"listbox",name:t+"inheritSize",label:"inherit",values:[{text:"n/a",value:"n/a"},{text:"none",value:"none"},{text:"client width",value:"clientWidth"}],maxWidth:120,tooltip:"Inherit the with of an ancestor"},{name:t+"margin_top",label:"top",tooltip:"Margin top"},{name:t+"margin_right",label:"right",tooltip:"Margin right"},{type:"spacer"},{name:t+"margin_bottom",label:"bottom",tooltip:"Margin bottom"},{name:t+"margin_left",label:"left",tooltip:"Margin left"},{type:"spacer"}]}}},"dgf.fieldsetPreserveAspectRatio":{create:function(e,t){return{type:"fieldset",label:"aspect ratio",tooltip:"preserveAspectRatio indicates how referenced images should be fitted with respect to the reference rectangle.",layout:"grid",columns:2,items:[{type:"listbox",name:t+"preserveAspectRatio_align",values:e.create(t,"dgf.valuesPreserveAspectRatioAlign"),label:"align",tooltip:"Force uniform scaling."},{type:"listbox",name:t+"preserveAspectRatio_meetOrSlice",values:e.create(t,"dgf.valuesPreserveAspectRatioMeetOrSlice"),label:"meet/slice",tooltip:"Scale the graphic such that: aspect ratio is preserved, the entire viewBox is visible within the viewport. Meet: the viewBox is scaled up as much as possible. Slice: the viewBox is scaled down as much as possible."}]}}},"dgf.fieldsetData":{create:function(e,t){return{type:"fieldset",label:"data",layout:"grid",columns:3,defaults:{type:"combobox",classes:"datamap",minWidth:125},items:[{name:t+"x",value:"n/a",values:[{text:"n/a",value:"n/a"}],label:"x",tooltip:"x attribute of the data. Ex. x / d(1)"},{name:t+"y",value:"n/a",values:[{text:"n/a",value:"n/a"}],label:"y",tooltip:"y attribute of the data. Ex. y / d(2)"},{name:t+"y1",value:"n/a",values:[{text:"n/a",value:"n/a"}],label:"y1",tooltip:"y1 attribute of the data. Ex. y1 / d(3)"},{name:t+"key",value:"n/a",values:[{text:"n/a",value:"n/a"}],label:"key",tooltip:"key attribute of the data. Ex. id / d(0)"},{name:t+"color",value:"n/a",values:[{text:"n/a",value:"n/a"}],label:"color",tooltip:"color attribute of the data. Ex. green / red, green, blue"},{name:t+"text",value:"n/a",values:[{text:"n/a",value:"n/a"}],label:"text",tooltip:"text attribute of the data. Ex. comment / y"}]}}},"dgf.fieldsetScales":{create:function(e,t){return{type:"fieldset",label:"scales",layout:"grid",columns:2,defaults:{},items:[{type:"listbox",name:t+"xScale_type",label:"x",values:[{text:"n/a",value:"n/a"}].concat(e.typesByCategory("scale")),tooltip:"Type of the x-scale."},{type:"combobox",classes:"domainmap",name:t+"xScale_domain",value:"n/a",values:[{text:"n/a",value:"n/a"}],label:"domain",tooltip:"Domain of the x-scale. Ex. map(x) / x,y / extenty1ero(y) / keys() / value,first,second"},{type:"spacer"},{type:"slider",subtype:"number",name:t+"xScale_paddingInner",minValue:0,maxValue:1,label:"inner",tooltip:"Inner padding of the x-scale. Ex. 0.1 / 0.5",ondragend:function(e){e.control.value(Math.round(100*e.value)/100)}},{type:"spacer"},{type:"slider",subtype:"number",name:t+"xScale_paddingOuter",minValue:0,maxValue:1,label:"outer",tooltip:"Outer padding of the x-scale. Ex. 0.1 / 0.5",ondragend:function(e){e.control.value(Math.round(100*e.value)/100)}},{type:"listbox",name:t+"yScale_type",values:[{text:"n/a",value:"n/a"}].concat(e.typesByCategory("scale")),label:"y",tooltip:"Type of the y-scale."},{type:"combobox",classes:"domainmap",name:t+"yScale_domain",value:"n/a",values:[{text:"n/a",value:"n/a"}],label:"domain",tooltip:"Domain of the y-scale. Ex. extent(y) / map(y) / 0,10"},{type:"spacer"},{type:"slider",subtype:"number",name:t+"yScale_paddingInner",minValue:0,maxValue:1,label:"inner",tooltip:"Inner padding of the y-scale. Ex. 0.1 / 0.5",ondragend:function(e){e.control.value(Math.round(100*e.value)/100)}},{type:"spacer"},{type:"slider",subtype:"number",name:t+"yScale_paddingOuter",minValue:0,maxValue:1,label:"outer",tooltip:"Outer padding of the y-scale. Ex. 0.1 / 0.5",ondragend:function(e){e.control.value(Math.round(100*e.value)/100)}},{type:"listbox",name:t+"y1Scale_type",values:[{text:"n/a",value:"n/a"}].concat(e.typesByCategory("scale")),label:"y1",tooltip:"Type of the y1-scale."},{type:"combobox",classes:"domainmap",name:t+"y1Scale_domain",value:"n/a",values:[{text:"n/a",value:"n/a"}],label:"domain",tooltip:"Domain of the y1-scale. Ex. extent(y) / map(x) / 0,10"},{type:"spacer"},{type:"textbox",name:t+"y1Scale_range",label:"range",tooltip:"Range of the y1-scale. Ex. 0,10"},{type:"listbox",name:t+"colorScale_type",label:"color",values:[{text:"n/a",value:"n/a"}].concat(e.typesByCategory("scale")),tooltip:"Type of the color scale. Use Sequential Scale for range interpolate."},{type:"combobox",classes:"domainmap",name:t+"colorScale_domain",value:"n/a",values:[{text:"n/a",value:"n/a"}],label:"domain",tooltip:"Domain of the color scale. Ex. map(x) / x,y / extentZero(y) / keys() / 5,9,10"},{type:"spacer"},{type:"combobox",name:t+"colorScale_range",value:"n/a",values:[{text:"n/a",value:"n/a"}].concat(e.typesByCategory("scheme")).concat([{text:"single color",menu:e.create(t,"dgf.valuesColorName")}]).concat([{text:"interpolate",menu:e.typesByCategory("interpolate").concat([{text:"custom",menu:e.create(t,"dgf.valuesInterpolateCustom")}])}]),label:"range",tooltip:"Range of the color scale. Use interpolators in combination with a Sequential Scales. Ex. red,green,blue / dgf.schemeFews9 / d3.interpolateGreys)"}]}}},"dgf.fieldsetScalesSmall":{create:function(e,t){return{type:"fieldset",label:"scales",layout:"grid",columns:2,defaults:{},items:[{type:"listbox",name:t+"y1Scale_type",values:[{text:"n/a",value:"n/a"}].concat(e.typesByCategory("scale")),label:"y1",tooltip:"Type of the y1-scale."},{type:"combobox",classes:"domainmap",name:t+"y1Scale_domain",value:"n/a",values:[{text:"n/a",value:"n/a"}],label:"domain",tooltip:"Domain of the y1-scale. Ex. extent(y) / map(x) / 0,10"},{type:"spacer"},{type:"textbox",name:t+"y1Scale_range",label:"range",tooltip:"Range of the y1-scale. Ex. 0,10"},{type:"listbox",name:t+"colorScale_type",label:"color",values:[{text:"n/a",value:"n/a"}].concat(e.typesByCategory("scale")),tooltip:"Type of the color scale. Use Sequential Scale for range interpolate."},{type:"combobox",classes:"domainmap",name:t+"colorScale_domain",value:"n/a",values:[{text:"n/a",value:"n/a"},{text:"Custom List",value:"list(0,5,10)"}],label:"domain",tooltip:"Domain of the color scale. Ex. map() / map(x) / x,y, / extentZero(y) / keys() / 5,9,10"},{type:"spacer"},{type:"combobox",name:t+"colorScale_range",value:"n/a",values:[{text:"n/a",value:"n/a"}].concat(e.typesByCategory("scheme")).concat([{text:"single color",menu:e.create(t,"dgf.valuesColorName")}]).concat([{text:"interpolate",menu:e.typesByCategory("interpolate").concat([{text:"custom",menu:e.create(t,"dgf.valuesInterpolateCustom")}])}]),label:"range",tooltip:"Range of the color scale. Use interpolators in combination with Sequential Scales. Ex. list(red,green,blue) / dgf.schemeFews9 / interpolate(hsl,green,red,0.5) / #interpolate(d3.interpolateGreys)"}]}}},"dgf.fieldsetScalesColor":{create:function(e,t){return{type:"fieldset",label:"scales",layout:"grid",columns:2,defaults:{},items:[{type:"listbox",name:t+"colorScale_type",label:"color",values:[{text:"n/a",value:"n/a"}].concat(e.typesByCategory("scale")),tooltip:"Type of the color scale. Use Sequential Scale for range interpolate."},{type:"combobox",classes:"domainmap",name:t+"colorScale_domain",value:"n/a",values:[{text:"n/a",value:"n/a"},{text:"Custom List",value:"list(0,5,10)"}],label:"domain",tooltip:"Domain of the color scale. Ex. map() / map(x) / x,y, / extentZero(y) / keys() / 5,9,10"},{type:"spacer"},{type:"combobox",name:t+"colorScale_range",value:"n/a",values:[{text:"n/a",value:"n/a"}].concat(e.typesByCategory("scheme")).concat([{text:"single color",menu:e.create(t,"dgf.valuesColorName")}]).concat([{text:"interpolate",menu:e.typesByCategory("interpolate").concat([{text:"custom",menu:e.create(t,"dgf.valuesInterpolateCustom")}])}]),label:"range",tooltip:"Range of the color scale. Use interpolators in combination with Sequential Scales. Ex. list(red,green,blue) / dgf.schemeFews9 / interpolate(hsl,green,red,0.5) / #interpolate(d3.interpolateGreys)"}]}}},"dgf.fieldsetText":{create:function(e,t){return{type:"fieldset",label:"text",layout:"grid",columns:2,items:[{type:"combobox",name:t+"textFormat",value:"n/a",values:[{text:"n/a",value:"n/a"},{text:"number",menu:e.create(t,"dgf.valuesNumberFormat")},{text:"time",menu:e.create(t,"dgf.valuesTimeFormat")}],label:"format",tooltip:"Format of the text."},{type:"spacer"},{type:"combobox",name:t+"anchor",value:"n/a",label:"anchor",values:[{text:"n/a",value:"n/a"}].concat(e.create(t,"dgf.valuesTextAnchor")),tooltip:"Anchor of the text. Ex. middle, start, end"},{type:"combobox",name:t+"rotate",value:"n/a",values:[{text:"n/a",value:"n/a"}].concat(e.create(t,"dgf.valuesRotate")),label:"rotate",tooltip:"Rotation angle of the text. Ex. -30 / -90"},{type:"textbox",name:t+"dx",label:"delta x",tooltip:"Delta x of the text. Ex. 100 / 1em / threshold(x,0,1em,-1em)"},{type:"textbox",name:t+"dy",label:"delta y",tooltip:"Delta y of the text. Ex. 100 / 1em / threshold(y,0,1em,-1em)"}]}}},"dgf.fieldsetTextSmall":{create:function(e,t){return{type:"fieldset",label:"text",layout:"grid",columns:2,items:[{type:"combobox",name:t+"textFormat",value:"n/a",values:[{text:"n/a",value:"n/a"},{text:"number",menu:e.create(t,"dgf.valuesNumberFormat")},{text:"time",menu:e.create(t,"dgf.valuesTimeFormat")}],label:"format",tooltip:"Format of the text."},{type:"spacer"}]}}},"dgf.fieldsetLine":{create:function(e,t){return{type:"fieldset",label:"line",layout:"grid",columns:2,items:[{type:"listbox",name:t+"line_type",value:"d3.line",values:[{text:"n/a",value:"n/a"}].concat(e.typesByCategory("line generator")),label:"type",tooltip:"Line generator."},{type:"spacer"},{type:"listbox",name:t+"line_curve_type",values:[{text:"n/a",value:"n/a"}].concat(e.typesByCategory("curve")),label:"curve",tooltip:"Curve of the line."},{type:"slider",subtype:"number",name:t+"line_curve_tension",minValue:0,maxValue:1,label:"tension",tooltip:"Tension of the curve (Cardinal).",ondragend:function(e){e.control.value(Math.round(100*e.value)/100)}},{type:"spacer"},{type:"slider",subtype:"number",name:t+"line_curve_alpha",minValue:0,maxValue:1,label:"alpha",
tooltip:"Alpha of the curve (CatmullRom).",ondragend:function(e){e.control.value(Math.round(100*e.value)/100)}},{type:"spacer"},{type:"slider",subtype:"number",name:t+"line_curve_beta",minValue:0,maxValue:1,label:"beta",tooltip:"Beta of the curve (Bundle).",ondragend:function(e){e.control.value(Math.round(100*e.value)/100)}},{type:"combobox",name:t+"strokeWidth",values:[{text:"n/a",value:"n/a"}].concat(e.create(t,"dgf.valuesStrokeWidth")),label:"stroke",tooltip:"Stroke width of the line."},{type:"combobox",name:t+"strokeDashArray",values:[{text:"n/a",value:"n/a"}].concat(e.create(t,"dgf.valuesStrokeDashArray")),label:"dash",tooltip:"Stroke dash array of the line. Ex. 5,5 / 5,10,5"},{type:"combobox",classes:"datamap",name:t+"label",value:"n/a",values:[{text:"n/a",value:"n/a"}],label:"label",tooltip:"Label of the line."}]}}},"dgf.fieldsetPie":{create:function(e,t){return{type:"fieldset",label:"pie",layout:"grid",columns:3,defaults:{type:"textbox",subtype:"number",step:5,maxWidth:80},items:[{type:"combobox",subtype:null,classes:"datamap",name:t+"yLabel",label:"label",value:"n/a",values:[{text:"n/a",value:"n/a"}],maxWidth:160,tooltip:"The label to display for y values."},{type:"spacer"},{type:"spacer"},{name:t+"arc_innerRadius",label:"inner radius",step:.05,tooltip:"Inner radius of the arc in % of the outer radius.",ondragend:function(e){e.control.value(e.value)}},{type:"spacer"},{type:"spacer"},{name:t+"pie_startAngle",label:"angle start",tooltip:"Start angle of the pie in degrees.",ondragend:function(e){e.control.value(e.value)}},{name:t+"pie_endAngle",label:"end",tooltip:"End angle of the pie in degrees.",ondragend:function(e){e.control.value(e.value)}},{name:t+"pie_padAngle",label:"pad",step:.5,tooltip:"Pad angle of the pie in degrees.",ondragend:function(e){e.control.value(e.value)}}]}}},"dgf.fieldsetBackground":{create:function(e,t){return{type:"fieldset",label:"background",layout:"grid",columns:3,defaults:{},items:[{type:"combobox",name:t+"fill",value:"n/a",values:[{text:"n/a",value:"n/a"}].concat(e.typesByCategory("scheme")).concat([{text:"single color",menu:e.create(t,"dgf.valuesColorName")}]),label:"fill",tooltip:"Fill color of the background"},{type:"textbox",subtype:"number",name:t+"opacity",label:"opacity",step:.05,minValue:0,maxValue:1,tooltip:"Opacity of the background"},{type:"spacer"}]}}},"dgf.fieldsetBubble":{create:function(e,t){return{type:"fieldset",label:"bubble",layout:"grid",columns:2,defaults:{},items:[{type:"listbox",name:t+"sort_type",values:[{text:"n/a",value:"n/a"},{text:"ascending",value:"d3.ascending"},{text:"descending",value:"d3.descending"}],label:"sort",tooltip:"Sort order of the bubbles"},{type:"textbox",subtype:"number",step:.5,name:t+"pack_padding",label:"padding",tooltip:"The padding between the bubbles."},{type:"combobox",name:t+"stroke_width",values:[{text:"n/a",value:"n/a"}].concat(e.create(t,"dgf.valuesStrokeWidth")),label:"stroke",tooltip:"Stroke width of the line."},{type:"combobox",name:t+"stroke_dashArray",values:[{text:"n/a",value:"n/a"}].concat(e.create(t,"dgf.valuesStrokeDashArray")),label:"dash",tooltip:"Stroke dash array of the line. Ex. 5,5 / 5,10,5"},{type:"combobox",subtype:null,classes:"datamap",name:t+"yLabel",label:"label",value:"n/a",values:[{text:"n/a",value:"n/a"}],tooltip:"The label to display for y values."},{type:"checkbox",name:t+"bubble_noFill",label:"no fill",tooltip:"Do not fill the bubbles."}]}}},"dgf.fieldsetPackLabel":{create:function(e,t){return{type:"fieldset",label:"label",layout:"grid",columns:2,defaults:{},items:[{type:"listbox",name:t+"sort_type",values:[{text:"n/a",value:"n/a"},{text:"ascending",value:"d3.ascending"},{text:"descending",value:"d3.descending"}],label:"sort",tooltip:"Sort order of the bubbles"},{type:"textbox",subtype:"number",step:.5,name:t+"pack_padding",label:"padding",tooltip:"The padding between the bubbles."},{type:"combobox",subtype:null,classes:"datamap",name:t+"yLabel",label:"label",value:"n/a",values:[{text:"n/a",value:"n/a"}],tooltip:"The label to display for y values."},{type:"spacer"}]}}},"dgf.fieldsetAxis":{create:function(e,t){return{type:"fieldset",label:"axis",layout:"grid",columns:4,defaults:{minWidth:100,maxWidth:200},items:[{type:"spacer"},{type:"label",text:"x-axis"},{type:"label",text:"y-axis"},{type:"label",text:"y1-axis"},{type:"label",text:"label"},{type:"combobox",classes:"datamap",name:t+"xLabel",value:"n/a",values:[{text:"n/a",value:"n/a"}],tooltip:"The label to display for x values."},{type:"combobox",classes:"datamap",name:t+"yLabel",value:"n/a",values:[{text:"n/a",value:"n/a"}],tooltip:"The label to display for y values."},{type:"combobox",classes:"datamap",name:t+"y1Label",value:"n/a",values:[{text:"n/a",value:"n/a"}],tooltip:"The label to display for y1 values."},{type:"label",text:"ticks"},{type:"textbox",subtype:"number",name:t+"xTicks",value:"n/a",tooltip:"Number of ticks of the x-axis. Ex. 3 / 5"},{type:"textbox",subtype:"number",name:t+"yTicks",value:"n/a",tooltip:"Number of ticks of the y-axis. Ex. 3 / 5"},{type:"textbox",subtype:"number",name:t+"y1Ticks",value:"n/a",tooltip:"Number of ticks of the y1-axis. Ex. 3 / 5"},{type:"label",text:"tick values"},{type:"textbox",name:t+"xTickValues",tooltip:"Tick values of the x-axis. Ex. 0,5,10"},{type:"textbox",name:t+"yTickValues",tooltip:"Tick values of the y-axis. Ex. 0,5,10"},{type:"textbox",name:t+"y1TickValues",tooltip:"Tick values of the y1-axis. Ex. 0,5,10"},{type:"label",text:"tick rotate"},{type:"combobox",name:t+"xTickRotate",value:"n/a",values:[{text:"n/a",value:"n/a"}].concat(e.create(t,"dgf.valuesRotate")),tooltip:"Tick rotation of the x-axis. Ex. -45"},{type:"combobox",name:t+"yTickRotate",value:"n/a",values:[{text:"n/a",value:"n/a"}].concat(e.create(t,"dgf.valuesRotate")),tooltip:"Tick rotation of the y-axis. Ex. -45"},{type:"combobox",name:t+"y1TickRotate",value:"n/a",values:[{text:"n/a",value:"n/a"}].concat(e.create(t,"dgf.valuesRotate")),tooltip:"Tick rotation of the y1-axis. Ex. -45"},{type:"label",text:"format"},{type:"combobox",name:t+"xFormat",value:"n/a",values:[{text:"n/a",value:"n/a"},{text:"number",menu:e.create(t,"dgf.valuesNumberFormat")},{text:"time",menu:e.create(t,"dgf.valuesTimeFormat")}],tooltip:"The display format for x values."},{type:"combobox",name:t+"yFormat",value:"n/a",values:[{text:"n/a",value:"n/a"},{text:"number",menu:e.create(t,"dgf.valuesNumberFormat")},{text:"time",menu:e.create(t,"dgf.valuesTimeFormat")}],tooltip:"The display format for y values."},{type:"combobox",name:t+"y1Format",value:"n/a",values:[{text:"n/a",value:"n/a"},{text:"number",menu:e.create(t,"dgf.valuesNumberFormat")},{text:"time",menu:e.create(t,"dgf.valuesTimeFormat")}],tooltip:"The display format for y1 values."},{type:"label",text:"grid"},{type:"combobox",name:t+"xGrid_strokeDashArray",value:"n/a",values:[{text:"n/a",value:"n/a"}].concat(e.create(t,"dgf.valuesStrokeDashArray")),tooltip:"Stroke dash array of the x grid. Ex. 5,5 / 5,10,5"},{type:"combobox",name:t+"yGrid_strokeDashArray",value:"n/a",values:[{text:"n/a",value:"n/a"}].concat(e.create(t,"dgf.valuesStrokeDashArray")),tooltip:"Stroke dash array of the y grid. Ex. 5,5 / 5,10,5"},{type:"combobox",name:t+"y1Grid_strokeDashArray",value:"n/a",values:[{text:"n/a",value:"n/a"}].concat(e.create(t,"dgf.valuesStrokeDashArray")),tooltip:"Stroke dash array of the y1 grid. Ex. 5,5 / 5,10,5"},{type:"label",text:"hide"},{type:"checkbox",name:t+"xHide",tooltip:"Hide the x-axis."},{type:"checkbox",name:t+"yHide",tooltip:"Hide the y-axis."},{type:"checkbox",name:t+"y1Hide",tooltip:"Hide the y1-axis."}]}}},"dgf.fieldsetTransitions":{create:function(e,t){return{type:"fieldset",label:"transitions",layout:"grid",columns:3,defaults:{minWidth:100,maxWidth:200},items:[{type:"label",text:"ease",label:" "},{type:"label",text:"delay"},{type:"label",text:"duration"},{type:"listbox",name:t+"transition_ease",value:"n/a",label:"update",values:[{text:"n/a",value:"n/a"}].concat(e.typesByCategory("ease")),tooltip:"Easing of the transition."},{type:"combobox",classes:"delaymap",name:t+"transition_delay",value:"n/a",values:[{text:"n/a",value:"n/a"}],tooltip:"Delay of the transition in ms. Ex. 500 / indexed(500)"},{type:"combobox",classes:"durationmap",name:t+"transition_duration",value:"n/a",values:[{text:"n/a",value:"n/a"}],tooltip:"Duration of the transition in ms. Ex. 500 / indexed(500)"},{type:"listbox",name:t+"enterTransition_ease",label:"enter",value:"n/a",values:[{text:"n/a",value:"n/a"}].concat(e.typesByCategory("ease")),tooltip:"Easing of the transition."},{type:"combobox",classes:"delaymap",name:t+"enterTransition_delay",value:"n/a",values:[{text:"n/a",value:"n/a"}],tooltip:"Delay of the transition in ms. Ex. 500 / indexed(500)"},{type:"combobox",classes:"durationmap",name:t+"enterTransition_duration",value:"n/a",values:[{text:"n/a",value:"n/a"}],tooltip:"Duration of the transition in ms. Ex. 500 / indexed(500)"},{type:"listbox",name:t+"exitTransition_ease",value:"n/a",label:"exit",values:[{text:"n/a",value:"n/a"}].concat(e.typesByCategory("ease")),tooltip:"Easing of the transition."},{type:"combobox",classes:"delaymap",name:t+"exitTransition_delay",value:"n/a",values:[{text:"n/a",value:"n/a"}],tooltip:"Delay of the transition in ms. Ex. 500 / indexed(500)"},{type:"combobox",classes:"durationmap",name:t+"exitTransition_duration",value:"n/a",values:[{text:"n/a",value:"n/a"}],tooltip:"Duration of the transition in ms. Ex. 500 / indexed(500)"}]}}},"dgf.fieldsetTransitionsSmall":{create:function(e,t){return{type:"fieldset",label:"transitions",layout:"grid",columns:3,defaults:{minWidth:100,maxWidth:200},items:[{type:"label",text:"ease",label:" "},{type:"label",text:"delay"},{type:"label",text:"duration"},{type:"listbox",name:t+"transition_ease",label:" ",values:[{text:"n/a",value:"n/a"}].concat(e.typesByCategory("ease")),tooltip:"Easing of the transition."},{type:"combobox",classes:"delaymap",name:t+"transition_delay",value:"n/a",values:[{text:"n/a",value:"n/a"}],tooltip:"Delay of the transition in ms. Ex. 500 / indexed(500)"},{type:"combobox",classes:"durationmap",name:t+"transition_duration",value:"n/a",values:[{text:"n/a",value:"n/a"}],tooltip:"Duration of the transition in ms. Ex. 500 / indexed(500)"}]}}},"dgf.fieldsetLayer":{create:function(e,t){return{type:"fieldset",label:"layer",layout:"grid",columns:3,defaults:{minWidth:100,maxWidth:200},items:[{type:"textbox",subtype:"number",name:t+"layer_zIndex",label:"z-index",tooltip:"z-index of the layer."},{type:"checkbox",name:t+"layer_hide",label:"hide",tooltip:"Hide the layer."},{type:"spacer"},{type:"textbox",subtype:"number",name:t+"layer_transform_translate_x",step:5,label:"translate x",tooltip:"x translation of the layer."},{type:"textbox",subtype:"number",name:t+"layer_transform_translate_y",step:5,label:"translate y",tooltip:"y translation of the layer."},{type:"spacer"},{type:"textbox",subtype:"number",name:t+"layer_transform_scale_x",step:.1,label:"scale x",tooltip:"x scale of the layer."},{type:"textbox",subtype:"number",name:t+"layer_transform_scale_y",step:.1,label:"scale y",tooltip:"y scale of the layer."},{type:"spacer"},{type:"textbox",subtype:"number",name:t+"layer_transform_rotate_a",step:5,label:"rotate a",tooltip:"Rotation angle of the layer in degrees."},{type:"textbox",subtype:"number",name:t+"layer_transform_rotate_x",step:5,label:"rotate x",tooltip:"Rotation x point of the layer."},{type:"textbox",subtype:"number",name:t+"layer_transform_rotate_y",step:5,label:"rotate y",tooltip:"Rotation y point of the layer."}]}}},"dgf.fieldsetStyleFigure":{create:function(e,t){return{type:"fieldset",label:"figure",tooltip:"Styles applied to the figure.",layout:"grid",columns:3,defaults:{minWidth:100,maxWidth:200},items:[{type:"label",text:"width",label:" "},{type:"label",text:"float"},{type:"label",text:"clear"},{type:"combobox",name:t+"smartphone_figure_width",values:[{text:"n/a",value:"n/a"}].concat(e.create(t,"dgf.valuesCSSWidth")),value:"n/a",label:"smartphone",tooltip:"Width of the figure on smartphones."},{type:"listbox",name:t+"smartphone_figure_float",values:[{text:"n/a",value:"n/a"}].concat(e.create(t,"dgf.valuesCSSFloat")),tooltip:"The float CSS property specifies that an element should be placed along the left or right side of its container, where text and inline elements will wrap around it."},{type:"listbox",name:t+"smartphone_figure_clear",values:[{text:"n/a",value:"n/a"}].concat(e.create(t,"dgf.valuesCSSClear")),tooltip:"The clear CSS property specifies whether an element can be next to floating elements that precede it or must be moved down (cleared) below them."},{type:"combobox",name:t+"tablet_figure_width",values:[{text:"n/a",value:"n/a"}].concat(e.create(t,"dgf.valuesCSSWidth")),value:"n/a",label:"tablet",tooltip:"Width of the figure on tablets."},{type:"listbox",name:t+"tablet_figure_float",values:[{text:"n/a",value:"n/a"}].concat(e.create(t,"dgf.valuesCSSFloat")),tooltip:"The float CSS property specifies that an element should be placed along the left or right side of its container, where text and inline elements will wrap around it."},{type:"listbox",name:t+"tablet_figure_clear",values:[{text:"n/a",value:"n/a"}].concat(e.create(t,"dgf.valuesCSSClear")),tooltip:"The clear CSS property specifies whether an element can be next to floating elements that precede it or must be moved down (cleared) below them."},{type:"combobox",name:t+"desktop_figure_width",values:[{text:"n/a",value:"n/a"}].concat(e.create(t,"dgf.valuesCSSWidth")),value:"n/a",label:"desktop",tooltip:"Width of the figure on desktops."},{type:"listbox",name:t+"desktop_figure_float",values:[{text:"n/a",value:"n/a"}].concat(e.create(t,"dgf.valuesCSSFloat")),tooltip:"The float CSS property specifies that an element should be placed along the left or right side of its container, where text and inline elements will wrap around it."},{type:"listbox",name:t+"desktop_figure_clear",values:[{text:"n/a",value:"n/a"}].concat(e.create(t,"dgf.valuesCSSClear")),tooltip:"The clear CSS property specifies whether an element can be next to floating elements that precede it or must be moved down (cleared) below them."}]}}}},hu={"dgf.readerDSV":{create:function(e,t,a){return{type:"form",title:"Reader",items:[e.create(t,"dgf.listboxReaderType"),{type:"combobox",name:t+"delimiter",values:[{text:"comma",value:"comma"},{text:"tab",value:"tab"},{text:"semicolon",value:"semicolon"}],value:",",label:"delimiter",maxWidth:250,tooltip:"Delimiter. Ex. comma-separated (csv), tab-separated (tsv)"},{type:"textbox",name:t+"data",classes:"readerData",label:"data",multiline:!0,minHeight:300,style:"font-family: monospace; font-size: medium; line-height: 120%;",tooltip:"Data",onchange:function(t){var a=t.control.getRoot(),n=Fn(a.toJSON());n=e.validate(n),e.setMenu(a,n)}},e.lookup("dgf.fieldsetParseData").create(e,t,a)]}}}},pu={"dgf.readerJSON":{create:function(e,t,a){return{type:"form",title:"Reader",items:[e.create(t,"dgf.listboxReaderType"),{type:"panel",label:"url",layout:"flex",orient:"horiz",items:[{type:"textbox",name:t+"url",flex:.8,tooltip:"URL of the data"},{type:"button",text:"load",onclick:function(t){var a=t.control.getRoot(),n=Fn(a.toJSON()),r=a.find(".readerData");if(r.value("Loading data..."),n.reader){n.reader.data=void 0;var o=e.getTagFactory().create(null,n.reader);o.parserCallback(function(e){return e}).callback(function(t){var n=t.datum();n&&(r.value(JSON.stringify(n,null,"\t")),e.setMenu(a,Fn(a.toJSON())))}).errorCallback(function(e){var t=e;e.target&&(t=e.target.statusText+" ("+e.target.status+")"),r.value(t)});Er(document.createDocumentFragment()).call(o)}}}]},{type:"textbox",classes:"readerData",name:t+"data",label:"data",multiline:!0,minHeight:300,style:"font-family: monospace; font-size: medium; line-height: 120%;",tooltip:"Data loaded"},{type:"checkbox",name:t+"cacheData",label:"cache data",tooltip:"Cache data in data-dgf attribute."},e.lookup("dgf.fieldsetParseData").create(e,t,a)]}}}},mu={"dgf.readerTestData":{create:function(e,t,a){return{type:"form",title:"Reader",items:[e.create(t,"dgf.listboxReaderType"),{type:"listbox",name:t+"xType",value:"n/a",values:[{text:"n/a",value:"n/a"},{text:"ordinal",value:"ordinal"},{text:"continous",value:"continous"},{text:"date",value:"date"}],label:"type x",maxWidth:100,tooltip:"Type of the x values. Ex. ordinal / continous, date"},{type:"textbox",name:t+"yMin",value:0,label:"min y",maxWidth:100,tooltip:"Minimum y value generated. Ex. 0 / -10"},{type:"textbox",name:t+"yMax",value:100,label:"max y",maxWidth:100,tooltip:"Maximum y value generated. Ex. 0 / 10"},{type:"textbox",name:t+"rows",label:"rows",value:9,maxWidth:100,tooltip:"Number of rows. Ex. 8",onchange:function(t){e.setMenu(t.control.getRoot(),Fn(t.control.getRoot().toJSON()))}},{type:"slider",name:t+"exitProbability",label:"exit prob",minValue:0,maxValue:1,maxWidth:200,tooltip:"Probability that an item will exit the data set."},{type:"button",text:"create",label:" ",maxWidth:100,onclick:function(t){var a=t.control.getRoot(),n=Fn(a.toJSON()),r=a.find(".readerData");if(r.value("Loading data..."),n.reader){var o=e.getTagFactory().create(n.reader);o.parserCallback(function(e){return e}).callback(function(e){var t=e.datum();t&&r.value(JSON.stringify(t,void 0,4))});Er(document.createDocumentFragment()).call(o)}}},{type:"textbox",classes:"readerData",disabled:!0,label:"data",multiline:!0,minHeight:320,style:"font-family: monospace; font-size: medium; line-height: 120%;",tooltip:"Data loaded"},e.lookup("dgf.fieldsetParseData").create(e,t,a)]}}}},bu={"dgf.schedulerInterval":{create:function(e,t){return{type:"form",title:"Scheduler",items:[e.create(t,"dgf.listboxSchedulerType"),{type:"combobox",name:t+"interval",values:e.create(t,"dgf.valuesIntervalMillis"),value:"20000",label:"interval [ms]",maxWidth:120,tooltip:"Interval in milli-seconds"},{type:"textbox",subtype:"number",name:t+"repeat",value:3,label:"repeat",maxWidth:120,tooltip:"Times to repeat. -1 = forever"}]}}}},yu={"dgf.setupForm":{create:function(t,a,n){return{type:"form",id:"setup_form",title:"Setup",items:[{type:"listbox",name:"extend",label:"extend",values:t.typesByCategory("setup"),maxWidth:250,disabled:!0,tooltip:"General setup",onselect:function(a){var r=a.target.rootControl,o=r.controlIdLookup.dialog_form,i=a.target.value();if(""!==i){var l=Fn(r.toJSON());n=t.getTagFactory().decompress({extend:i}),n.nodeId=l.nodeId,n.reader=l.reader;var u=t.create("dialog_",n),c=e.ui.Factory.create({type:"tabpanel",items:u.body});o.replace(o.items()[0],c);for(var f=document.getElementById("dialog_form-body");f.firstChild;)f.removeChild(f.firstChild);c.renderTo(f).reflow(),o.fromJSON(Nn(n))}}},{type:"listbox",name:"dialog",label:"dialog",values:[{text:"small",value:"dgf.dialogLayersSmall"},{text:"medium",value:"dgf.dialogLayersMedium"},{text:"large",value:"dgf.dialogLayersLarge"}],maxWidth:250,tooltip:"Dialog"},{type:"textbox",name:"nodeId",label:"node id",maxWidth:250,tooltip:"The id of the node"},{type:"textbox",label:"setup",multiline:!0,minHeight:400,style:"font-family: monospace; font-size: medium; line-height: 120%;",tooltip:"data-dgf attribute content.",onPostRender:function(e){var a=e.control.getRoot(),n=Fn(a.data.data);delete n.nodeId;var r=t.getTagFactory().compress(n),o={"my.setupNewSetup":{title:"New Setup",description:"This is a new setup.",category:["setup","my setups"],"data-dgf":r}};e.control.value(JSON.stringify(o,null,"\t"))}},{type:"textbox",label:"html",multiline:!0,minHeight:200,style:"font-family: monospace; font-size: medium; line-height: 120%;",tooltip:"Use this html code to display the diagram in a webpage.",onPostRender:function(a){var n=a.control.getRoot(),r=Fn(n.data.data),o=e.activeEditor.contentDocument.getElementById(r.nodeId);if(o){var i=t.getTagFactory().toHtml(o,r);i=i.replace(/contenteditable=\"true\"/gi,'contenteditable="false"'),i=i.replace(/\"/g,"'"),i=i.replace(/\&quot;/g,'"'),a.control.value(i)}}}]}}}},vu={"dgf.stylePlainCSS":{create:function(e,t){return{type:"form",title:"Style",defaults:{},items:[e.create(t,"dgf.listboxStyleType"),{type:"textbox",name:t+"css",label:"css",multiline:!0,minHeight:400,style:"font-family: monospace; font-size: medium; line-height: 120%;",tooltip:"CSS rules. Use #id to set rules to the context of the chart. Ex. #id text { font-size: 1.5em; }"}]}}}},xu={"dgf.styleResponsiveCSS":{create:function(e,t){return{type:"form",title:"Style",defaults:{},items:[e.create(t,"dgf.listboxStyleType"),e.create(t,"dgf.fieldsetStyleFigure"),{type:"textbox",name:t+"css",label:"css",multiline:!0,minHeight:300,style:"font-family: monospace; font-size: medium; line-height: 120%;",tooltip:"CSS rules. Use #id to set rules to the context of the chart. Ex. #id text { font-size: 1.5em; }"}]}}}},gu={"dgf.templateArcLabel":{create:function(e,t){return{type:"form",title:"Arc Label",defaults:{},items:[e.create(t,"dgf.listboxTemplateType"),e.create(t,"dgf.fieldsetData"),e.create(t,"dgf.fieldsetScalesSmall"),e.create(t,"dgf.fieldsetPie"),e.create(t,"dgf.fieldsetTextSmall"),e.create(t,"dgf.fieldsetTransitions"),e.create(t,"dgf.fieldsetLayer")]}}}},_u={"dgf.templateAxis":{create:function(e,t){return{type:"form",title:"Axis",defaults:{},items:[e.create(t,"dgf.listboxTemplateType"),e.create(t,"dgf.fieldsetData"),e.create(t,"dgf.fieldsetScales"),e.create(t,"dgf.fieldsetAxis"),e.create(t,"dgf.fieldsetLayer")]}}}},wu={"dgf.templateBackground":{create:function(e,t){return{type:"form",title:"Background",defaults:{},items:[e.create(t,"dgf.listboxTemplateType"),e.create(t,"dgf.fieldsetBackground"),e.create(t,"dgf.fieldsetTransitionsSmall"),e.create(t,"dgf.fieldsetLayer")]}}}},Mu={"dgf.templateBar":{create:function(e,t){return{type:"form",title:"Bar",defaults:{},items:[e.create(t,"dgf.listboxTemplateType"),e.create(t,"dgf.fieldsetData"),e.create(t,"dgf.fieldsetScales"),e.create(t,"dgf.fieldsetTransitions"),e.create(t,"dgf.fieldsetLayer")]}}}},Su={"dgf.templateBubble":{create:function(e,t){return{type:"form",title:"Bubble",defaults:{},items:[e.create(t,"dgf.listboxTemplateType"),e.create(t,"dgf.fieldsetData"),e.create(t,"dgf.fieldsetScalesColor"),e.create(t,"dgf.fieldsetBubble"),e.create(t,"dgf.fieldsetTransitions"),e.create(t,"dgf.fieldsetLayer")]}}}},Tu={"dgf.templateDot":{create:function(e,t){return{type:"form",title:"Dot",defaults:{},items:[e.create(t,"dgf.listboxTemplateType"),e.create(t,"dgf.fieldsetData"),e.create(t,"dgf.fieldsetScales"),e.create(t,"dgf.fieldsetTransitions"),e.create(t,"dgf.fieldsetLayer")]}}}},ku={"dgf.templateImage":{create:function(e,t){return{type:"form",title:"Image",defaults:{},items:[e.create(t,"dgf.listboxTemplateType"),{type:"textbox",name:t+"url",label:"url",style:"font-family: monospace;"},e.create(t,"dgf.fieldsetPreserveAspectRatio"),e.create(t,"dgf.fieldsetTransitionsSmall"),e.create(t,"dgf.fieldsetLayer")]}}}},Au={"dgf.templateLabel":{create:function(e,t){return{type:"form",title:"Label",defaults:{},items:[e.create(t,"dgf.listboxTemplateType"),e.create(t,"dgf.fieldsetData"),e.create(t,"dgf.fieldsetScales"),e.create(t,"dgf.fieldsetText"),e.create(t,"dgf.fieldsetTransitions"),e.create(t,"dgf.fieldsetLayer")]}}}},Cu={"dgf.templateLegend":{create:function(e,t){return{type:"form",title:"Legend",defaults:{},items:[e.create(t,"dgf.listboxTemplateType"),e.create(t,"dgf.fieldsetData"),e.create(t,"dgf.fieldsetScales"),{type:"fieldset",label:"legend",layout:"grid",columns:3,defaults:{maxWidth:160},items:[{type:"combobox",subtype:null,classes:"datamap",name:t+"label",label:"label",value:"n/a",values:[{text:"n/a",value:"n/a"}],tooltip:"The label to display for the legend."},{type:"listbox",name:t+"position",label:"position",value:"n/a",values:[{text:"n/a",value:"n/a"},{text:"left",value:"left"},{text:"right",value:"right"}],tooltip:"Position of the legend"},{type:"combobox",name:t+"textFormat",value:"n/a",values:[{text:"n/a",value:"n/a"},{text:"number",menu:e.create(t,"dgf.valuesNumberFormat")},{text:"time",menu:e.create(t,"dgf.valuesTimeFormat")}],label:"format",tooltip:"Format of the text."},{type:"textbox",subtype:"number",name:t+"handle_width",step:1,label:"handle width",maxWidth:80,tooltip:"Width of the handle to draw"},{type:"textbox",subtype:"number",name:t+"handle_height",step:1,label:"height",maxWidth:80,tooltip:"Height of the handle to draw"},{type:"textbox",subtype:"number",name:t+"handle_padding",step:.05,label:"padding",maxWidth:80,tooltip:"Padding between the handles"},{type:"textbox",subtype:"number",name:t+"interpolateSteps",step:1,label:"steps",maxWidth:80,tooltip:"Number of steps for interpolated scales"},{type:"spacer"},{type:"spacer"}]},e.create(t,"dgf.fieldsetTransitions"),e.create(t,"dgf.fieldsetLayer")]}}}},Yu={"dgf.templateLine":{create:function(e,t){return{type:"form",title:"Line",defaults:{},items:[e.create(t,"dgf.listboxTemplateType"),e.create(t,"dgf.fieldsetData"),e.create(t,"dgf.fieldsetScales"),e.create(t,"dgf.fieldsetLine"),e.create(t,"dgf.fieldsetTransitions"),e.create(t,"dgf.fieldsetLayer")]}}}},Nu={"dgf.templatePie":{create:function(e,t){return{type:"form",title:"Pie",defaults:{},items:[e.create(t,"dgf.listboxTemplateType"),e.create(t,"dgf.fieldsetData"),e.create(t,"dgf.fieldsetScalesSmall"),e.create(t,"dgf.fieldsetPie"),e.create(t,"dgf.fieldsetTransitions"),e.create(t,"dgf.fieldsetLayer")]}}}},Fu={"dgf.templatePackLabel":{create:function(e,t){return{type:"form",title:"Pack Label",defaults:{},items:[e.create(t,"dgf.listboxTemplateType"),e.create(t,"dgf.fieldsetData"),e.create(t,"dgf.fieldsetScalesSmall"),e.create(t,"dgf.fieldsetPackLabel"),e.create(t,"dgf.fieldsetTransitions"),e.create(t,"dgf.fieldsetLayer")]}}}},Du={"dgf.schedulerUndefined":{create:function(e,t){return{type:"form",title:"Scheduler",defaults:{},items:[e.create(t,"dgf.listboxSchedulerType")]}}},"dgf.readerUndefined":{create:function(e,t){return{type:"form",title:"Reader",defaults:{},items:[e.create(t,"dgf.listboxReaderType")]}}},"dgf.containerTemplateUndefined":{create:function(e,t){return{type:"form",title:"Container",defaults:{},items:[e.create(t,"dgf.listboxContainerTemplateType")]}}},"dgf.templateUndefined":{create:function(e,t){return{type:"form",title:"Layer",defaults:{},items:[e.create(t,"dgf.listboxTemplateType")]}}},"dgf.styleUndefined":{create:function(e,t){return{type:"form",title:"Style",defaults:{},items:[e.create(t,"dgf.listboxStyleType")]}}}};e.PluginManager.add("dgf",function(e,a){function n(a){var n=e.selection.getNode();a=l.decompress(JSON.parse(a)),a.nodeId=a.nodeId||n.id||Hn();var r=u.create("",a);r.onSubmit=function(){var r=this.toJSON();r=t.unflatten(r),r=t.extend(a,r),r=u.validate(r),n.id=r.nodeId||n.id;var o=l.toHtml(n,r);n.hasAttribute("data-dgf")?e.undoManager.transact(function(){var t=e.dom.createRng();t.selectNode(n),e.selection.setRng(t),e.selection.setContent(o)}):e.undoManager.transact(function(){e.insertContent(o)})},r.onClose=function(){n&&n.id&&(n=e.dom.select("#"+n.id)[0],e.selection.select(n),l.process(n))},e.windowManager.open(r)}function r(e){var t=setInterval(function(){l&&l.ready()&&(clearInterval(t),e.state.data.menu=e.settings.menu=u.typesByCategory("setup"),e.disabled(!1))},50)}function o(e){return e.replace(/(<figure[\s\S]*?data-dgf[\s\S]*?>[\s\S]*?<\/figcaption>)[\s\S]*?(<\/figure>)/gi,"$1$2").replace(/data-mce-selected="1"/gi,"")}function i(e,t){var a=/(<figure[\s\S]*?data-dgf[\s\S]*?>[\s\S]*?<figcaption[\s\S]*?contenteditable=)\"[\s\S]*?\"([\s\S]*?<\/figcaption>[\s\S]*?<\/figure>)/gi;return t?e.replace(a,'$1"true"$2'):e.replace(a,'$1"false"$2')}var l,u;e.on("PreInit",function(){l=t.tagFactory(),u=In(l)}),e.on("LoadContent",function(e){var t=setInterval(function(){l.ready()&&(clearInterval(t),l.process(e.target.contentDocument))},50)}),e.on("BeforeSetContent",function(e){e.content=o(e.content),e.content=i(e.content,!0)}),e.on("SaveContent",function(e){e.content=o(e.content)}),e.on("PostProcess",function(e){e.content=o(e.content),e.content=i(e.content,!1)}),e.on("BeforeAddUndo",function(e){e.level.content=o(e.level.content)}),e.on("Undo",function(e){l.process(e.target.contentDocument)}),e.on("Redo",function(e){l.process(e.target.contentDocument)}),e.on("DblClick",function(e){var a=t.findParentBySelector(e.target,"figure[data-dgf]");a&&("FIGCAPTION"===e.target.nodeName||t.findParentBySelector(e.target,"figcaption")||n(a.getAttribute("data-dgf")))});var c,f=0;e.on("touchend",function(e){var a=(new Date).getTime(),r=a-f;if(clearTimeout(c),r<500&&r>0){var o=t.findParentBySelector(e.target,"figure[data-dgf]");o&&("FIGCAPTION"===e.target.nodeName||t.findParentBySelector(e.target,"figcaption")||n(o.getAttribute("data-dgf")))}else c=setTimeout(function(){clearTimeout(c)},500);f=a}),e.addMenuItem("dgf",{text:"Diagram",context:"insert",disabled:!0,onPostRender:function(){r(this)},onselect:function(e){n('{ "extend": "'+e.control.value()+'"}')}}),e.addButton("dgf",{type:"menubutton",id:"dgf_button",image:a+"/chart-bar.png",tooltip:"Insert/Edit Diagram",stateSelector:"figure[data-dgf]",disabled:!0,onPostRender:function(){r(this)},onclick:function(t){var a=e.selection.getNode();"menubutton"===t.control.type&&a.hasAttribute("data-dgf")&&(t.control.hideMenu(),n(a.getAttribute("data-dgf")))},onselect:function(e){n('{ "extend": "'+e.control.value()+'"}')}}),e.addCommand("dgf",n)})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
